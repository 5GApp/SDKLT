#
# Copyright: (c) 2018 Broadcom. All Rights Reserved. "Broadcom" refers to 
# Broadcom Limited and/or its subsidiaries.
# 
# Broadcom Switch Software License
# 
# This license governs the use of the accompanying Broadcom software. Your 
# use of the software indicates your acceptance of the terms and conditions 
# of this license. If you do not agree to the terms and conditions of this 
# license, do not use the software.
# 1. Definitions
#    "Licensor" means any person or entity that distributes its Work.
#    "Software" means the original work of authorship made available under 
#    this license.
#    "Work" means the Software and any additions to or derivative works of 
#    the Software that are made available under this license.
#    The terms "reproduce," "reproduction," "derivative works," and 
#    "distribution" have the meaning as provided under U.S. copyright law.
#    Works, including the Software, are "made available" under this license 
#    by including in or with the Work either (a) a copyright notice 
#    referencing the applicability of this license to the Work, or (b) a copy 
#    of this license.
# 2. Grant of Copyright License
#    Subject to the terms and conditions of this license, each Licensor 
#    grants to you a perpetual, worldwide, non-exclusive, and royalty-free 
#    copyright license to reproduce, prepare derivative works of, publicly 
#    display, publicly perform, sublicense and distribute its Work and any 
#    resulting derivative works in any form.
# 3. Grant of Patent License
#    Subject to the terms and conditions of this license, each Licensor 
#    grants to you a perpetual, worldwide, non-exclusive, and royalty-free 
#    patent license to make, have made, use, offer to sell, sell, import, and 
#    otherwise transfer its Work, in whole or in part. This patent license 
#    applies only to the patent claims licensable by Licensor that would be 
#    infringed by Licensor's Work (or portion thereof) individually and 
#    excluding any combinations with any other materials or technology.
#    If you institute patent litigation against any Licensor (including a 
#    cross-claim or counterclaim in a lawsuit) to enforce any patents that 
#    you allege are infringed by any Work, then your patent license from such 
#    Licensor to the Work shall terminate as of the date such litigation is 
#    filed.
# 4. Redistribution
#    You may reproduce or distribute the Work only if (a) you do so under 
#    this License, (b) you include a complete copy of this License with your 
#    distribution, and (c) you retain without modification any copyright, 
#    patent, trademark, or attribution notices that are present in the Work.
# 5. Derivative Works
#    You may specify that additional or different terms apply to the use, 
#    reproduction, and distribution of your derivative works of the Work 
#    ("Your Terms") only if (a) Your Terms provide that the limitations of 
#    Section 7 apply to your derivative works, and (b) you identify the 
#    specific derivative works that are subject to Your Terms. 
#    Notwithstanding Your Terms, this license (including the redistribution 
#    requirements in Section 4) will continue to apply to the Work itself.
# 6. Trademarks
#    This license does not grant any rights to use any Licensor's or its 
#    affiliates' names, logos, or trademarks, except as necessary to 
#    reproduce the notices described in this license.
# 7. Limitations
#    Platform. The Work and any derivative works thereof may only be used, or 
#    intended for use, with a Broadcom switch integrated circuit.
#    No Reverse Engineering. You will not use the Work to disassemble, 
#    reverse engineer, decompile, or attempt to ascertain the underlying 
#    technology of a Broadcom switch integrated circuit.
# 8. Termination
#    If you violate any term of this license, then your rights under this 
#    license (including the license grants of Sections 2 and 3) will 
#    terminate immediately.
# 9. Disclaimer of Warranty
#    THE WORK IS PROVIDED "AS IS" WITHOUT WARRANTIES OR CONDITIONS OF ANY 
#    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WARRANTIES OR CONDITIONS OF 
#    MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, TITLE OR 
#    NON-INFRINGEMENT. YOU BEAR THE RISK OF UNDERTAKING ANY ACTIVITIES UNDER 
#    THIS LICENSE. SOME STATES' CONSUMER LAWS DO NOT ALLOW EXCLUSION OF AN 
#    IMPLIED WARRANTY, SO THIS DISCLAIMER MAY NOT APPLY TO YOU.
# 10. Limitation of Liability
#    EXCEPT AS PROHIBITED BY APPLICABLE LAW, IN NO EVENT AND UNDER NO LEGAL 
#    THEORY, WHETHER IN TORT (INCLUDING NEGLIGENCE), CONTRACT, OR OTHERWISE 
#    SHALL ANY LICENSOR BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY DIRECT, 
#    INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES ARISING OUT OF 
#    OR RELATED TO THIS LICENSE, THE USE OR INABILITY TO USE THE WORK 
#    (INCLUDING BUT NOT LIMITED TO LOSS OF GOODWILL, BUSINESS INTERRUPTION, 
#    LOST PROFITS OR DATA, COMPUTER FAILURE OR MALFUNCTION, OR ANY OTHER 
#    COMMERCIAL DAMAGES OR LOSSES), EVEN IF THE LICENSOR HAS BEEN ADVISED OF 
#    THE POSSIBILITY OF SUCH DAMAGES.
# 
# 
#

################################################################################
#
# Purpose: CLI example to show configuration of EFP[Egress Field Processor] in
# L3_DOUBLE_WIDE mode and PORT_ANY_PACKET_IPV6 type using NGSDK commands.
#

# Description: Group 1  - Qualifiers [SrcIp6High, DstIp6High, OutPort,
#                                     Ip6NextHeader, Ip6TrafficClass, L4Ports,
#                                     IpType],
#                         Mode [L3_DOUBLE_WIDE] and
#                         Port Packet Type [PORT_ANY_PACKET_IPV6]
#              Rule 1   - SrcIp6High : Upper 64 bits of 3FFE::1
#                         DstIp6High : Upper 64 bits of 3FFE::2
#                         OutPort : 2 [Egress port]
#                         Ip6NextHeader : 6 [TCP]
#                         Ip6TrafficClass : 0x33
#                         L4Ports : 1 [L4 ports valid bit]
#                         IpType : Any_Ipv6
#              Policy 1 - Drop
#              Entry 1  - Associate Rule 1, Policy 1 with Entry 1 in Group 1
#
# Notes: The following EFP example drops a packet when it matches on the
#        programmed fields of the IPv6/TCP packet and outport.
#
# The initial steps of setting up packet IO, mapping queues to channel, starting
# packet watcher, configuring port in loopback, checking port status,
# configuring VLAN STG, MAC counters and creating VLAN are for validating the
# functionality of this script.
# Port 1 is used for illustration purposes. The next five steps configure EFP
# with the above description set. A packet is sent from port 1 to match the
# configuration and it gets dropped as per the action.
#
# Setup diagram:
#                +-------------------------------------+
#                |                                     |
#                |               BCM56960              |
#                |                                     |
#                |  EFP                                |
#                |  Qualifiers: SrcIp6High - 3FFE::1   |
#                |              DstIp6High - 3FFE::2   |
#                |              OutPort - 2            |
# +------------->|              Ip6NextHeader - 6      +------------------>
#      Port 1    |              Ip6TrafficClass - 0x33 |
#                |              L4Ports - 1            |
#                |              IpType - Any_Ipv6      |
#                |                                     |
#                |  Action: Drop                       |
#                |                                     |
#                +-------------------------------------+
#
# Ingress port(s): 1.
#
# Egress port(s): Not relevant.
#
# Egress CoS queue: Not relevant.
#
# Device: bcm56960_a0
#
# NGSDK Version: 0.9
#
# Verification method: Packet sampling is enabled on port 2[outport] to show
# that packet does not get switched to port 2 as indicated by L2 entry, instead
# gets dropped. Also can check EGR_DROP_VECTOR being set for EFP_DROP.
#
# BCMLT.0>  dsh -c "get nz EGR_DROP_VECTORr"
# register EGR_DROP_VECTORr{0}.epipe0 [0x000226000000] = 0x00080000
#         DROP_VECTOR=0x80000(524288)
#
################################################################################

# Setup packet IO from diag shell.
pktdev init

# Map all queues to channel 1.
pktdev chan queuemap 1 highword=0xffff lowword=0xffffffff

# Start packet watcher to display packets arriving at CPU.
rx watcher create

# Enable Link Manager(linkscan task).
lt LM_CONTROL insert SCAN_ENABLE=1

# Configure software linkscan mode for ports 1,2.
for port=1,2 'lt LM_PORT_CONTROL insert PORT_ID=$port LINKSCAN_MODE=SOFTWARE'

# Configure port 1 and 2 in loopback mode.
for port=1,2 'lt PC_PORT update PORT_ID=$port LOOPBACK_MODE=PC_LPBK_MAC'

# Allow Link Manager to collect status of the ports 1,2.
# Default Link Manager scan interval is 250 ms.
sleep quiet 3

# Check status of ports 1 and 2. LINK_STATE=1 indicates port is UP.
for port=1,2 'lt LM_LINK_STATE lookup PORT_ID=$port'

# Configure ports 1 and 2 in forwarding state.
lt VLAN_STG insert VLAN_STG_ID=1 STATE[1-2]=FORWARD

# Enable MAC counters for ports 1,2.
for port=1,2 'lt CTR_MAC insert PORT_ID=$port'

# Create VLAN 1 and include ports 1 and 2.
lt VLAN insert VLAN_ID=1 EGR_MEMBER_PORTS=6 ING_MEMBER_PORTS=6 VLAN_STG_ID=1

# Add VLAN tag for untagged packets.
lt VLAN_ING_TAG_ACTION_PROFILE insert VLAN_ING_TAG_ACTION_PROFILE_ID=1 \
                                      UT_OTAG=ADD

# Configure ports 1 and 2 as ethernet ports.
for port=1,2 'lt PORT insert PORT_ID=$port PORT_TYPE=ETHERNET MY_MODID=0 \
                             VLAN_ING_TAG_ACTION_PROFILE_ID=1 ING_OVID=1'

# Configure a profile to classify 0x8100 at bytes 12,13 of the packet to be
# outer TPID and add 0x8100 as outgoing packet's outer TPID.
lt VLAN_OUTER_TPID insert VLAN_OUTER_TPID_ID=0 ING_TPID=0x8100 EGR_TPID=0x8100

# Classify packets with value 0x8100 at bytes 12,13 as outer VLAN tagged packet.
for port=1,2 'lt PORT_POLICY insert PORT_ID=$port PASS_ON_OUTER_TPID_MATCH[0]=1'

# Add an L2 entry to switch the packet to port 2.
lt L2_FDB_VLAN insert VLAN_ID=0x1 MAC_ADDR=0x001111111111 DEST_TYPE=PORT \
                      MODID=0 MODPORT=2

# EFP configuration starts with the steps below.
# ----------------------------------------------

# Enable EFP on port 2.
lt PORT_FP insert PORT_ID=2 FP_EGR=1

# Create EFP group 1 with qualifiers [source IPv6 high(upper 64 bits),
# destination IPv6 high(upper 64 bits), outport, IPv6 next header, IPv6 traffic
# class, L4 port valid and iptype] in L3 double wide mode and any IPv6 port
# packet type.
lt FP_EGR_GRP_TEMPLATE insert FP_EGR_GRP_TEMPLATE_ID=1 MODE=L3_DOUBLE_WIDE \
                              PORT_PKT_TYPE=PORT_ANY_PACKET_IPV6 \
                              QUAL_DST_IP6_HIGH=1 QUAL_SRC_IP6_HIGH=1 \
                              QUAL_OUTPORT=1 QUAL_IP_FIRST_EH_PROTO=1 \
                              QUAL_TOS=1 QUAL_L4_PKT=1 QUAL_IP_TYPE=1

# Configure EFP rule.
lt FP_EGR_RULE_TEMPLATE insert FP_EGR_RULE_TEMPLATE_ID=1 \
                               QUAL_DST_IP6_HIGH=0x3FFE000000000000 \
                               QUAL_DST_IP6_HIGH_MASK=0xFFFFFFFFFFFFFFFF \
                               QUAL_SRC_IP6_HIGH=0x3FFE000000000000 \
                               QUAL_DST_IP6_HIGH_MASK=0xFFFFFFFFFFFFFFFF \
                               QUAL_OUTPORT=0x2 QUAL_OUTPORT_MASK=0xFF \
                               QUAL_IP_FIRST_EH_PROTO=0x6 \
                               QUAL_IP_FIRST_EH_PROTO_MASK=0xFF QUAL_TOS=0x33 \
                               QUAL_TOS_MASK=0xFF QUAL_L4_PKT=0x1 \
                               QUAL_L4_PKT_MASK=0x1 QUAL_L3_TYPE=ANY_IP6

# Configure drop action for EFP.
lt FP_EGR_POLICY_TEMPLATE insert FP_EGR_POLICY_TEMPLATE_ID=1 \
                                 ACTION_R_DROP=1 ACTION_Y_DROP=1 ACTION_G_DROP=1

# Associate group ID, policy ID and rule ID to the entry of group.
lt FP_EGR_ENTRY insert FP_EGR_ENTRY_ID=1 FP_EGR_GRP_TEMPLATE_ID=1 \
                       FP_EGR_POLICY_TEMPLATE_ID=1 FP_EGR_RULE_TEMPLATE_ID=1

# Enable sFlow on port 2.
lt MIRROR_PORT_ENCAP_SFLOW insert PORT_ID=2 \
                                  SAMPLE_ING=1 \
                                  SAMPLE_ING_CPU=1 \
                                  SAMPLE_ING_RATE=0xfffffff

# Send the packet on port 1.
tx 1 portlist=1 data=0011111111110022222222228100000186DD63355555002606FF3FFE00000000000000000000000000013FFE00000000000000000000000000023030313100003232000033335010778857DB0000111111111111111111111111111111111111

# To check EFP_DROP bit of EGR_DROP_VECTOR being set.
dsh -c "get nz EGR_DROP_VECTORr"

