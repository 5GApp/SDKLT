/*******************************************************************************
 *
 * DO NOT EDIT THIS FILE!
 * This file is auto-generated by c-struct-gen from PTRM data files.
 * Edits to this file will be lost when it is regenerated.
 *
 * Copyright: (c) 2018 Broadcom. All Rights Reserved. "Broadcom" refers to 
 * Broadcom Limited and/or its subsidiaries.
 * 
 * Broadcom Switch Software License
 * 
 * This license governs the use of the accompanying Broadcom software. Your 
 * use of the software indicates your acceptance of the terms and conditions 
 * of this license. If you do not agree to the terms and conditions of this 
 * license, do not use the software.
 * 1. Definitions
 *    "Licensor" means any person or entity that distributes its Work.
 *    "Software" means the original work of authorship made available under 
 *    this license.
 *    "Work" means the Software and any additions to or derivative works of 
 *    the Software that are made available under this license.
 *    The terms "reproduce," "reproduction," "derivative works," and 
 *    "distribution" have the meaning as provided under U.S. copyright law.
 *    Works, including the Software, are "made available" under this license 
 *    by including in or with the Work either (a) a copyright notice 
 *    referencing the applicability of this license to the Work, or (b) a copy 
 *    of this license.
 * 2. Grant of Copyright License
 *    Subject to the terms and conditions of this license, each Licensor 
 *    grants to you a perpetual, worldwide, non-exclusive, and royalty-free 
 *    copyright license to reproduce, prepare derivative works of, publicly 
 *    display, publicly perform, sublicense and distribute its Work and any 
 *    resulting derivative works in any form.
 * 3. Grant of Patent License
 *    Subject to the terms and conditions of this license, each Licensor 
 *    grants to you a perpetual, worldwide, non-exclusive, and royalty-free 
 *    patent license to make, have made, use, offer to sell, sell, import, and 
 *    otherwise transfer its Work, in whole or in part. This patent license 
 *    applies only to the patent claims licensable by Licensor that would be 
 *    infringed by Licensor's Work (or portion thereof) individually and 
 *    excluding any combinations with any other materials or technology.
 *    If you institute patent litigation against any Licensor (including a 
 *    cross-claim or counterclaim in a lawsuit) to enforce any patents that 
 *    you allege are infringed by any Work, then your patent license from such 
 *    Licensor to the Work shall terminate as of the date such litigation is 
 *    filed.
 * 4. Redistribution
 *    You may reproduce or distribute the Work only if (a) you do so under 
 *    this License, (b) you include a complete copy of this License with your 
 *    distribution, and (c) you retain without modification any copyright, 
 *    patent, trademark, or attribution notices that are present in the Work.
 * 5. Derivative Works
 *    You may specify that additional or different terms apply to the use, 
 *    reproduction, and distribution of your derivative works of the Work 
 *    ("Your Terms") only if (a) Your Terms provide that the limitations of 
 *    Section 7 apply to your derivative works, and (b) you identify the 
 *    specific derivative works that are subject to Your Terms. 
 *    Notwithstanding Your Terms, this license (including the redistribution 
 *    requirements in Section 4) will continue to apply to the Work itself.
 * 6. Trademarks
 *    This license does not grant any rights to use any Licensor's or its 
 *    affiliates' names, logos, or trademarks, except as necessary to 
 *    reproduce the notices described in this license.
 * 7. Limitations
 *    Platform. The Work and any derivative works thereof may only be used, or 
 *    intended for use, with a Broadcom switch integrated circuit.
 *    No Reverse Engineering. You will not use the Work to disassemble, 
 *    reverse engineer, decompile, or attempt to ascertain the underlying 
 *    technology of a Broadcom switch integrated circuit.
 * 8. Termination
 *    If you violate any term of this license, then your rights under this 
 *    license (including the license grants of Sections 2 and 3) will 
 *    terminate immediately.
 * 9. Disclaimer of Warranty
 *    THE WORK IS PROVIDED "AS IS" WITHOUT WARRANTIES OR CONDITIONS OF ANY 
 *    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WARRANTIES OR CONDITIONS OF 
 *    MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, TITLE OR 
 *    NON-INFRINGEMENT. YOU BEAR THE RISK OF UNDERTAKING ANY ACTIVITIES UNDER 
 *    THIS LICENSE. SOME STATES' CONSUMER LAWS DO NOT ALLOW EXCLUSION OF AN 
 *    IMPLIED WARRANTY, SO THIS DISCLAIMER MAY NOT APPLY TO YOU.
 * 10. Limitation of Liability
 *    EXCEPT AS PROHIBITED BY APPLICABLE LAW, IN NO EVENT AND UNDER NO LEGAL 
 *    THEORY, WHETHER IN TORT (INCLUDING NEGLIGENCE), CONTRACT, OR OTHERWISE 
 *    SHALL ANY LICENSOR BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY DIRECT, 
 *    INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES ARISING OUT OF 
 *    OR RELATED TO THIS LICENSE, THE USE OR INABILITY TO USE THE WORK 
 *    (INCLUDING BUT NOT LIMITED TO LOSS OF GOODWILL, BUSINESS INTERRUPTION, 
 *    LOST PROFITS OR DATA, COMPUTER FAILURE OR MALFUNCTION, OR ANY OTHER 
 *    COMMERCIAL DAMAGES OR LOSSES), EVEN IF THE LICENSOR HAS BEEN ADVISED OF 
 *    THE POSSIBILITY OF SUCH DAMAGES.
 */


static const bcmdrd_sid_t th_a0_fp_compression_dst_data_only_sid[1][1];
static const bcmdrd_sid_t th_a0_fp_compression_dst_tcam_shared_lt_array[3];
static const bcmdrd_sid_t th_a0_fp_compression_dst_tcam_sid[1][1];
static const bcmdrd_sid_t th_a0_fp_compression_src_data_only_sid[1][1];
static const bcmdrd_sid_t th_a0_fp_compression_src_tcam_shared_lt_array[3];
static const bcmdrd_sid_t th_a0_fp_compression_src_tcam_sid[1][1];
static const bcmdrd_sid_t th_a0_l2_my_station_tcam_data_only_sid[1][1];
static const bcmdrd_sid_t th_a0_l2_my_station_tcam_data_shared_lt_array[3];
static const bcmdrd_sid_t th_a0_l2_my_station_tcam_sid[1][1];
static const bcmdrd_sid_t th_a0_l2_user_entry_data_only_sid[1][1];
static const bcmdrd_sid_t th_a0_l2_user_entry_sid[1][1];
static const bcmdrd_sid_t th_a0_tnl_ipv4_decap_data_only_sid[1][1];
static const bcmdrd_sid_t th_a0_tnl_ipv4_decap_shared_lt_array[2];
static const bcmdrd_sid_t th_a0_tnl_ipv4_decap_tcam_sid[1][1];
static const bcmdrd_sid_t th_a0_tnl_ipv6_decap_data_only_sid[1][1];
static const bcmdrd_sid_t th_a0_tnl_ipv6_decap_shared_lt_array[2];
static const bcmdrd_sid_t th_a0_tnl_ipv6_decap_tcam_sid[4][1];
static const bcmdrd_sid_t th_a0_udf_data_only_sid[1][1];
static const bcmdrd_sid_t th_a0_udf_flex_hash_data_only_sid[1][1];
static const bcmdrd_sid_t th_a0_udf_flex_hash_tcam_sid[1][1];
static const bcmdrd_sid_t th_a0_udf_tcam_sid[1][1];
static const bcmdrd_sid_t th_a0_vlan_subnet_tcam_data_only_sid[1][1];
static const bcmdrd_sid_t th_a0_vlan_subnet_tcam_sid[1][1];
static const bcmdrd_sid_t * th_a0_fp_compression_dst_data_only_sid_array[1];
static const bcmdrd_sid_t * th_a0_fp_compression_dst_tcam_sid_array[1];
static const bcmdrd_sid_t * th_a0_fp_compression_src_data_only_sid_array[1];
static const bcmdrd_sid_t * th_a0_fp_compression_src_tcam_sid_array[1];
static const bcmdrd_sid_t * th_a0_l2_my_station_tcam_data_only_sid_array[1];
static const bcmdrd_sid_t * th_a0_l2_my_station_tcam_sid_array[1];
static const bcmdrd_sid_t * th_a0_l2_user_entry_data_only_sid_array[1];
static const bcmdrd_sid_t * th_a0_l2_user_entry_sid_array[1];
static const bcmdrd_sid_t * th_a0_tnl_ipv4_decap_data_only_sid_array[1];
static const bcmdrd_sid_t * th_a0_tnl_ipv4_decap_tcam_sid_array[1];
static const bcmdrd_sid_t * th_a0_tnl_ipv6_decap_data_only_sid_array[1];
static const bcmdrd_sid_t * th_a0_tnl_ipv6_decap_tcam_sid_array[4];
static const bcmdrd_sid_t * th_a0_udf_data_only_sid_array[1];
static const bcmdrd_sid_t * th_a0_udf_flex_hash_data_only_sid_array[1];
static const bcmdrd_sid_t * th_a0_udf_flex_hash_tcam_sid_array[1];
static const bcmdrd_sid_t * th_a0_udf_tcam_sid_array[1];
static const bcmdrd_sid_t * th_a0_vlan_subnet_tcam_data_only_sid_array[1];
static const bcmdrd_sid_t * th_a0_vlan_subnet_tcam_sid_array[1];
static const bcmptm_rm_tcam_hw_entry_info_t th_a0_fp_compression_dst_hw_entry_info[1];
static const bcmptm_rm_tcam_hw_entry_info_t th_a0_fp_compression_src_hw_entry_info[1];
static const bcmptm_rm_tcam_hw_entry_info_t th_a0_l2_my_station_tcam_hw_entry_info[1];
static const bcmptm_rm_tcam_hw_entry_info_t th_a0_l2_user_entry_hw_entry_info[1];
static const bcmptm_rm_tcam_hw_entry_info_t th_a0_tnl_ipv4_decap_hw_entry_info[1];
static const bcmptm_rm_tcam_hw_entry_info_t th_a0_tnl_ipv6_decap_hw_entry_info[1];
static const bcmptm_rm_tcam_hw_entry_info_t th_a0_udf_flex_hash_hw_entry_info[1];
static const bcmptm_rm_tcam_hw_entry_info_t th_a0_udf_hw_entry_info[1];
static const bcmptm_rm_tcam_hw_entry_info_t th_a0_vlan_subnet_tcam_hw_entry_info[1];
static const bcmptm_rm_tcam_more_info_t th_a0_fp_compression_dst_rm_more_info[1];
static const bcmptm_rm_tcam_more_info_t th_a0_fp_compression_src_rm_more_info[1];
static const bcmptm_rm_tcam_more_info_t th_a0_l2_my_station_tcam_rm_more_info[1];
static const bcmptm_rm_tcam_more_info_t th_a0_l2_user_entry_rm_more_info[1];
static const bcmptm_rm_tcam_more_info_t th_a0_tnl_ipv4_decap_rm_more_info[1];
static const bcmptm_rm_tcam_more_info_t th_a0_tnl_ipv6_decap_rm_more_info[1];
static const bcmptm_rm_tcam_more_info_t th_a0_udf_flex_hash_rm_more_info[1];
static const bcmptm_rm_tcam_more_info_t th_a0_udf_rm_more_info[1];
static const bcmptm_rm_tcam_more_info_t th_a0_vlan_subnet_tcam_rm_more_info[1];
static const lt_mreq_info_t th_a0_fp_compression_dst_lt_mreq_info;
static const lt_mreq_info_t th_a0_fp_compression_src_lt_mreq_info;
static const lt_mreq_info_t th_a0_l2_my_station_tcam_lt_mreq_info;
static const lt_mreq_info_t th_a0_l2_user_entry_lt_mreq_info;
static const lt_mreq_info_t th_a0_tnl_ipv4_decap_lt_mreq_info;
static const lt_mreq_info_t th_a0_tnl_ipv6_decap_lt_mreq_info;
static const lt_mreq_info_t th_a0_udf_flex_hash_lt_mreq_info;
static const lt_mreq_info_t th_a0_udf_lt_mreq_info;
static const lt_mreq_info_t th_a0_vlan_subnet_tcam_lt_mreq_info;
static const uint16_t th_a0_fp_compression_dst_data_end_bit_array[1];
static const uint16_t th_a0_fp_compression_src_data_end_bit_array[1];
static const uint16_t th_a0_l2_my_station_tcam_data_end_bit_array[1];
static const uint16_t th_a0_l2_user_entry_data_end_bit_array[1];
static const uint16_t th_a0_tnl_ipv4_decap_data_end_bit_array[1];
static const uint16_t th_a0_tnl_ipv6_decap_data_end_bit_array[1];
static const uint16_t th_a0_udf_flex_hash_data_end_bit_array[1];
static const uint16_t th_a0_udf_tcam_data_end_bit_array[1];
static const uint16_t th_a0_vlan_subnet_tcam_data_end_bit_array[1];

static const bcmdrd_sid_t th_a0_fp_compression_dst_data_only_sid[1][1] = {
    {
    DST_COMPRESSION_DATA_ONLYm,
    },
};
static const bcmdrd_sid_t th_a0_fp_compression_dst_tcam_shared_lt_array[3] = {
    FP_COMPRESSION_DST_IPV4t,
    FP_COMPRESSION_DST_IPV6t,
    FP_COMPRESSION_DST_FCOEt,
};
static const bcmdrd_sid_t th_a0_fp_compression_dst_tcam_sid[1][1] = {
    {
    DST_COMPRESSIONm,
    },
};
static const bcmdrd_sid_t th_a0_fp_compression_src_data_only_sid[1][1] = {
    {
    SRC_COMPRESSION_DATA_ONLYm,
    },
};
static const bcmdrd_sid_t th_a0_fp_compression_src_tcam_shared_lt_array[3] = {
    FP_COMPRESSION_SRC_IPV4t,
    FP_COMPRESSION_SRC_IPV6t,
    FP_COMPRESSION_SRC_FCOEt,
};
static const bcmdrd_sid_t th_a0_fp_compression_src_tcam_sid[1][1] = {
    {
    SRC_COMPRESSIONm,
    },
};
static const bcmdrd_sid_t th_a0_l2_my_station_tcam_data_only_sid[1][1] = {
    {
    MY_STATION_TCAM_DATA_ONLYm,
    },
};
static const bcmdrd_sid_t th_a0_l2_my_station_tcam_data_shared_lt_array[3] = {
    L2_MY_STATIONt,
    L2_MY_STATION_MODPORTt,
    L2_MY_STATION_TRUNKt,
};
static const bcmdrd_sid_t th_a0_l2_my_station_tcam_sid[1][1] = {
    {
    MY_STATION_TCAMm,
    },
};
static const bcmdrd_sid_t th_a0_l2_user_entry_data_only_sid[1][1] = {
    {
    L2_USER_ENTRY_DATA_ONLYm,
    },
};
static const bcmdrd_sid_t th_a0_l2_user_entry_sid[1][1] = {
    {
    L2_USER_ENTRYm,
    },
};
static const bcmdrd_sid_t th_a0_tnl_ipv4_decap_data_only_sid[1][1] = {
    {
    L3_TUNNEL_DATA_ONLYm,
    },
};
static const bcmdrd_sid_t th_a0_tnl_ipv4_decap_shared_lt_array[2] = {
    TNL_IPV4_DECAPt,
    TNL_IPV6_DECAPt,
};
static const bcmdrd_sid_t th_a0_tnl_ipv4_decap_tcam_sid[1][1] = {
    {
    L3_TUNNEL_ONLYm,
    },
};
static const bcmdrd_sid_t th_a0_tnl_ipv6_decap_data_only_sid[1][1] = {
    {
    L3_TUNNEL_DATA_ONLYm,
    },
};
static const bcmdrd_sid_t th_a0_tnl_ipv6_decap_shared_lt_array[2] = {
    TNL_IPV4_DECAPt,
    TNL_IPV6_DECAPt,
};
static const bcmdrd_sid_t th_a0_tnl_ipv6_decap_tcam_sid[4][1] = {
    {
    L3_TUNNEL_ONLYm,
    },
    {
    L3_TUNNEL_ONLYm,
    },
    {
    L3_TUNNEL_ONLYm,
    },
    {
    L3_TUNNEL_ONLYm,
    },
};
static const bcmdrd_sid_t th_a0_udf_data_only_sid[1][1] = {
    {
    FP_UDF_OFFSETm,
    },
};
static const bcmdrd_sid_t th_a0_udf_flex_hash_data_only_sid[1][1] = {
    {
    UDF_CONDITIONAL_CHECK_TABLE_RAMm,
    },
};
static const bcmdrd_sid_t th_a0_udf_flex_hash_tcam_sid[1][1] = {
    {
    UDF_CONDITIONAL_CHECK_TABLE_CAMm,
    },
};
static const bcmdrd_sid_t th_a0_udf_tcam_sid[1][1] = {
    {
    FP_UDF_TCAMm,
    },
};
static const bcmdrd_sid_t th_a0_vlan_subnet_tcam_data_only_sid[1][1] = {
    {
    VLAN_SUBNET_DATA_ONLYm,
    },
};
static const bcmdrd_sid_t th_a0_vlan_subnet_tcam_sid[1][1] = {
    {
    VLAN_SUBNETm,
    },
};
static const bcmdrd_sid_t * th_a0_fp_compression_dst_data_only_sid_array[1] = {
    th_a0_fp_compression_dst_data_only_sid[0],
};
static const bcmdrd_sid_t * th_a0_fp_compression_dst_tcam_sid_array[1] = {
    th_a0_fp_compression_dst_tcam_sid[0],
};
static const bcmdrd_sid_t * th_a0_fp_compression_src_data_only_sid_array[1] = {
    th_a0_fp_compression_src_data_only_sid[0],
};
static const bcmdrd_sid_t * th_a0_fp_compression_src_tcam_sid_array[1] = {
    th_a0_fp_compression_src_tcam_sid[0],
};
static const bcmdrd_sid_t * th_a0_l2_my_station_tcam_data_only_sid_array[1] = {
    th_a0_l2_my_station_tcam_data_only_sid[0],
};
static const bcmdrd_sid_t * th_a0_l2_my_station_tcam_sid_array[1] = {
    th_a0_l2_my_station_tcam_sid[0],
};
static const bcmdrd_sid_t * th_a0_l2_user_entry_data_only_sid_array[1] = {
    th_a0_l2_user_entry_data_only_sid[0],
};
static const bcmdrd_sid_t * th_a0_l2_user_entry_sid_array[1] = {
    th_a0_l2_user_entry_sid[0],
};
static const bcmdrd_sid_t * th_a0_tnl_ipv4_decap_data_only_sid_array[1] = {
    th_a0_tnl_ipv4_decap_data_only_sid[0],
};
static const bcmdrd_sid_t * th_a0_tnl_ipv4_decap_tcam_sid_array[1] = {
    th_a0_tnl_ipv4_decap_tcam_sid[0],
};
static const bcmdrd_sid_t * th_a0_tnl_ipv6_decap_data_only_sid_array[1] = {
    th_a0_tnl_ipv6_decap_data_only_sid[0],
};
static const bcmdrd_sid_t * th_a0_tnl_ipv6_decap_tcam_sid_array[4] = {
    th_a0_tnl_ipv6_decap_tcam_sid[0],
    th_a0_tnl_ipv6_decap_tcam_sid[1],
    th_a0_tnl_ipv6_decap_tcam_sid[2],
    th_a0_tnl_ipv6_decap_tcam_sid[3],
};
static const bcmdrd_sid_t * th_a0_udf_data_only_sid_array[1] = {
    th_a0_udf_data_only_sid[0],
};
static const bcmdrd_sid_t * th_a0_udf_flex_hash_data_only_sid_array[1] = {
    th_a0_udf_flex_hash_data_only_sid[0],
};
static const bcmdrd_sid_t * th_a0_udf_flex_hash_tcam_sid_array[1] = {
    th_a0_udf_flex_hash_tcam_sid[0],
};
static const bcmdrd_sid_t * th_a0_udf_tcam_sid_array[1] = {
    th_a0_udf_tcam_sid[0],
};
static const bcmdrd_sid_t * th_a0_vlan_subnet_tcam_data_only_sid_array[1] = {
    th_a0_vlan_subnet_tcam_data_only_sid[0],
};
static const bcmdrd_sid_t * th_a0_vlan_subnet_tcam_sid_array[1] = {
    th_a0_vlan_subnet_tcam_sid[0],
};
static const bcmptm_rm_tcam_hw_entry_info_t th_a0_fp_compression_dst_hw_entry_info[1] = {
    {
        .data_end_bit =     th_a0_fp_compression_dst_data_end_bit_array,
        /* implicit length assignment suppressed */
        .data_start_bit = 289,
        .group_mode = 0,
        .hw_dtype_field_start_bit = 0,
        .hw_dtype_field_width = 0,
        .hw_ktype_field_info = NULL,
        .key_size = 289,
        .key_type_val = NULL,
        .num_data_rows = 1,
        .num_depth_inst = 1,
        .num_key_rows = 1,
        .sid =     th_a0_fp_compression_dst_tcam_sid_array,
        /* implicit length assignment suppressed */
        .sid_data_only =     th_a0_fp_compression_dst_data_only_sid_array,
        /* implicit length assignment suppressed */
    },
};
static const bcmptm_rm_tcam_hw_entry_info_t th_a0_fp_compression_src_hw_entry_info[1] = {
    {
        .data_end_bit =     th_a0_fp_compression_src_data_end_bit_array,
        /* implicit length assignment suppressed */
        .data_start_bit = 289,
        .group_mode = 0,
        .hw_dtype_field_start_bit = 0,
        .hw_dtype_field_width = 0,
        .hw_ktype_field_info = NULL,
        .key_size = 289,
        .key_type_val = NULL,
        .num_data_rows = 1,
        .num_depth_inst = 1,
        .num_key_rows = 1,
        .sid =     th_a0_fp_compression_src_tcam_sid_array,
        /* implicit length assignment suppressed */
        .sid_data_only =     th_a0_fp_compression_src_data_only_sid_array,
        /* implicit length assignment suppressed */
    },
};
static const bcmptm_rm_tcam_hw_entry_info_t th_a0_l2_my_station_tcam_hw_entry_info[1] = {
    {
        .data_end_bit =     th_a0_l2_my_station_tcam_data_end_bit_array,
        /* implicit length assignment suppressed */
        .data_start_bit = 161,
        .group_mode = 0,
        .hw_dtype_field_start_bit = 0,
        .hw_dtype_field_width = 0,
        .hw_ktype_field_info = NULL,
        .key_size = 161,
        .key_type_val = NULL,
        .num_data_rows = 1,
        .num_depth_inst = 1,
        .num_key_rows = 1,
        .sid =     th_a0_l2_my_station_tcam_sid_array,
        /* implicit length assignment suppressed */
        .sid_data_only =     th_a0_l2_my_station_tcam_data_only_sid_array,
        /* implicit length assignment suppressed */
    },
};
static const bcmptm_rm_tcam_hw_entry_info_t th_a0_l2_user_entry_hw_entry_info[1] = {
    {
        .data_end_bit =     th_a0_l2_user_entry_data_end_bit_array,
        /* implicit length assignment suppressed */
        .data_start_bit = 161,
        .group_mode = 0,
        .hw_dtype_field_start_bit = 0,
        .hw_dtype_field_width = 0,
        .hw_ktype_field_info = NULL,
        .key_size = 161,
        .key_type_val = NULL,
        .num_data_rows = 1,
        .num_depth_inst = 1,
        .num_key_rows = 1,
        .sid =     th_a0_l2_user_entry_sid_array,
        /* implicit length assignment suppressed */
        .sid_data_only =     th_a0_l2_user_entry_data_only_sid_array,
        /* implicit length assignment suppressed */
    },
};
static const bcmptm_rm_tcam_hw_entry_info_t th_a0_tnl_ipv4_decap_hw_entry_info[1] = {
    {
        .data_end_bit =     th_a0_tnl_ipv4_decap_data_end_bit_array,
        /* implicit length assignment suppressed */
        .data_start_bit = 0,
        .entry_boundary = 0,
        .hw_dtype_field_start_bit = 0,
        .hw_dtype_field_width = 0,
        .hw_ktype_field_info = NULL,
        .key_size = 211,
        .key_type_val = NULL,
        .non_aggr = 1,
        .num_data_rows = 1,
        .num_depth_inst = 1,
        .num_key_rows = 1,
        .sid =     th_a0_tnl_ipv4_decap_tcam_sid_array,
        /* implicit length assignment suppressed */
        .sid_data_only =     th_a0_tnl_ipv4_decap_data_only_sid_array,
        /* implicit length assignment suppressed */
    },
};
static const bcmptm_rm_tcam_hw_entry_info_t th_a0_tnl_ipv6_decap_hw_entry_info[1] = {
    {
        .data_end_bit =     th_a0_tnl_ipv6_decap_data_end_bit_array,
        /* implicit length assignment suppressed */
        .data_start_bit = 0,
        .entry_boundary = 4,
        .hw_dtype_field_start_bit = 0,
        .hw_dtype_field_width = 0,
        .hw_ktype_field_info = NULL,
        .key_size = 211,
        .key_type_val = NULL,
        .non_aggr = 1,
        .num_data_rows = 1,
        .num_depth_inst = 1,
        .num_key_rows = 4,
        .sid =     th_a0_tnl_ipv6_decap_tcam_sid_array,
        /* implicit length assignment suppressed */
        .sid_data_only =     th_a0_tnl_ipv6_decap_data_only_sid_array,
        /* implicit length assignment suppressed */
    },
};
static const bcmptm_rm_tcam_hw_entry_info_t th_a0_udf_flex_hash_hw_entry_info[1] = {
    {
        .data_end_bit =     th_a0_udf_flex_hash_data_end_bit_array,
        /* implicit length assignment suppressed */
        .data_start_bit = 0,
        .group_mode = 0,
        .hw_dtype_field_start_bit = 0,
        .hw_dtype_field_width = 0,
        .hw_ktype_field_info = NULL,
        .key_size = 129,
        .key_type_val = NULL,
        .non_aggr = 1,
        .num_data_rows = 1,
        .num_depth_inst = 1,
        .num_key_rows = 1,
        .sid =     th_a0_udf_flex_hash_tcam_sid_array,
        /* implicit length assignment suppressed */
        .sid_data_only =     th_a0_udf_flex_hash_data_only_sid_array,
        /* implicit length assignment suppressed */
    },
};
static const bcmptm_rm_tcam_hw_entry_info_t th_a0_udf_hw_entry_info[1] = {
    {
        .data_end_bit =     th_a0_udf_tcam_data_end_bit_array,
        /* implicit length assignment suppressed */
        .data_start_bit = 0,
        .group_mode = 0,
        .hw_dtype_field_start_bit = 0,
        .hw_dtype_field_width = 0,
        .hw_ktype_field_info = NULL,
        .key_size = 161,
        .key_type_val = NULL,
        .non_aggr = 1,
        .num_data_rows = 1,
        .num_depth_inst = 1,
        .num_key_rows = 1,
        .sid =     th_a0_udf_tcam_sid_array,
        /* implicit length assignment suppressed */
        .sid_data_only =     th_a0_udf_data_only_sid_array,
        /* implicit length assignment suppressed */
    },
};
static const bcmptm_rm_tcam_hw_entry_info_t th_a0_vlan_subnet_tcam_hw_entry_info[1] = {
    {
        .data_end_bit =     th_a0_vlan_subnet_tcam_data_end_bit_array,
        /* implicit length assignment suppressed */
        .data_start_bit = 161,
        .group_mode = 0,
        .hw_dtype_field_start_bit = 0,
        .hw_dtype_field_width = 0,
        .hw_ktype_field_info = NULL,
        .key_size = 161,
        .key_type_val = NULL,
        .num_data_rows = 1,
        .num_depth_inst = 1,
        .num_key_rows = 1,
        .sid =     th_a0_vlan_subnet_tcam_sid_array,
        /* implicit length assignment suppressed */
        .sid_data_only =     th_a0_vlan_subnet_tcam_data_only_sid_array,
        /* implicit length assignment suppressed */
    },
};
static const bcmptm_rm_tcam_more_info_t th_a0_fp_compression_dst_rm_more_info[1] = {
    {
        .hw_atomicity_support = 0,
        .pipe_count = 4,
        .shared_lt_count = 3,
        .shared_lt_info =     th_a0_fp_compression_dst_tcam_shared_lt_array,
        /* implicit length assignment suppressed */
    },
};
static const bcmptm_rm_tcam_more_info_t th_a0_fp_compression_src_rm_more_info[1] = {
    {
        .hw_atomicity_support = 0,
        .pipe_count = 4,
        .shared_lt_count = 3,
        .shared_lt_info =     th_a0_fp_compression_src_tcam_shared_lt_array,
        /* implicit length assignment suppressed */
    },
};
static const bcmptm_rm_tcam_more_info_t th_a0_l2_my_station_tcam_rm_more_info[1] = {
    {
        .hw_atomicity_support = 0,
        .pipe_count = 1,
        .shared_lt_count = 3,
        .shared_lt_info =     th_a0_l2_my_station_tcam_data_shared_lt_array,
        /* implicit length assignment suppressed */
    },
};
static const bcmptm_rm_tcam_more_info_t th_a0_l2_user_entry_rm_more_info[1] = {
    {
        .hw_atomicity_support = 0,
        .pipe_count = 1,
    },
};
static const bcmptm_rm_tcam_more_info_t th_a0_tnl_ipv4_decap_rm_more_info[1] = {
    {
        .hw_atomicity_support = 0,
        .pipe_count = 1,
        .shared_lt_count = 2,
        .shared_lt_info =     th_a0_tnl_ipv4_decap_shared_lt_array,
        /* implicit length assignment suppressed */
    },
};
static const bcmptm_rm_tcam_more_info_t th_a0_tnl_ipv6_decap_rm_more_info[1] = {
    {
        .flags = (BCMPTM_RM_TCAM_F_DEPTH_EXPANSION),
        .hw_atomicity_support = 0,
        .pipe_count = 1,
        .shared_lt_count = 2,
        .shared_lt_info =     th_a0_tnl_ipv6_decap_shared_lt_array,
        /* implicit length assignment suppressed */
    },
};
static const bcmptm_rm_tcam_more_info_t th_a0_udf_flex_hash_rm_more_info[1] = {
    {
        .hw_atomicity_support = 0,
        .pipe_count = 1,
    },
};
static const bcmptm_rm_tcam_more_info_t th_a0_udf_rm_more_info[1] = {
    {
        .hw_atomicity_support = 0,
        .pipe_count = 4,
    },
};
static const bcmptm_rm_tcam_more_info_t th_a0_vlan_subnet_tcam_rm_more_info[1] = {
    {
        .hw_atomicity_support = 0,
        .pipe_count = 1,
    },
};
static const lt_mreq_info_t th_a0_fp_compression_dst_lt_mreq_info = {
    .aggr_ekw_edw = 11,
    .hw_entry_info =     th_a0_fp_compression_dst_hw_entry_info,
    .hw_entry_info_count = 1,/* implicit length assignment */
    .num_edw = 1,
    .num_ekw = 1,
    .pt_type = LT_PT_TYPE_TCAM_PRI_ONLY,
    .rm_more_info =     th_a0_fp_compression_dst_rm_more_info,
    .rm_more_info_count = 1,/* implicit length assignment */
};
static const lt_mreq_info_t th_a0_fp_compression_src_lt_mreq_info = {
    .aggr_ekw_edw = 11,
    .hw_entry_info =     th_a0_fp_compression_src_hw_entry_info,
    .hw_entry_info_count = 1,/* implicit length assignment */
    .num_edw = 1,
    .num_ekw = 1,
    .pt_type = LT_PT_TYPE_TCAM_PRI_ONLY,
    .rm_more_info =     th_a0_fp_compression_src_rm_more_info,
    .rm_more_info_count = 1,/* implicit length assignment */
};
static const lt_mreq_info_t th_a0_l2_my_station_tcam_lt_mreq_info = {
    .aggr_ekw_edw = 7,
    .hw_entry_info =     th_a0_l2_my_station_tcam_hw_entry_info,
    .hw_entry_info_count = 1,/* implicit length assignment */
    .num_edw = 1,
    .num_ekw = 1,
    .pt_type = LT_PT_TYPE_TCAM_PRI_ONLY,
    .rm_more_info =     th_a0_l2_my_station_tcam_rm_more_info,
    .rm_more_info_count = 1,/* implicit length assignment */
};
static const lt_mreq_info_t th_a0_l2_user_entry_lt_mreq_info = {
    .aggr_ekw_edw = 7,
    .hw_entry_info =     th_a0_l2_user_entry_hw_entry_info,
    .hw_entry_info_count = 1,/* implicit length assignment */
    .num_edw = 1,
    .num_ekw = 1,
    .pt_type = LT_PT_TYPE_TCAM_PRI_ONLY,
    .rm_more_info =     th_a0_l2_user_entry_rm_more_info,
    .rm_more_info_count = 1,/* implicit length assignment */
};
static const lt_mreq_info_t th_a0_tnl_ipv4_decap_lt_mreq_info = {
    .hw_entry_info =     th_a0_tnl_ipv4_decap_hw_entry_info,
    .hw_entry_info_count = 1,/* implicit length assignment */
    .num_edw = 1,
    .num_ekw = 1,
    .pt_type = LT_PT_TYPE_TCAM_PRI_ONLY,
    .rm_more_info =     th_a0_tnl_ipv4_decap_rm_more_info,
    .rm_more_info_count = 1,/* implicit length assignment */
};
static const lt_mreq_info_t th_a0_tnl_ipv6_decap_lt_mreq_info = {
    .hw_entry_info =     th_a0_tnl_ipv6_decap_hw_entry_info,
    .hw_entry_info_count = 1,/* implicit length assignment */
    .num_edw = 1,
    .num_ekw = 4,
    .pt_type = LT_PT_TYPE_TCAM_PRI_ONLY,
    .rm_more_info =     th_a0_tnl_ipv6_decap_rm_more_info,
    .rm_more_info_count = 1,/* implicit length assignment */
};
static const lt_mreq_info_t th_a0_udf_flex_hash_lt_mreq_info = {
    .hw_entry_info =     th_a0_udf_flex_hash_hw_entry_info,
    .hw_entry_info_count = 1,/* implicit length assignment */
    .num_edw = 1,
    .num_ekw = 1,
    .pt_type = LT_PT_TYPE_TCAM_PRI_ONLY,
    .rm_more_info =     th_a0_udf_flex_hash_rm_more_info,
    .rm_more_info_count = 1,/* implicit length assignment */
};
static const lt_mreq_info_t th_a0_udf_lt_mreq_info = {
    .hw_entry_info =     th_a0_udf_hw_entry_info,
    .hw_entry_info_count = 1,/* implicit length assignment */
    .num_edw = 1,
    .num_ekw = 1,
    .pt_type = LT_PT_TYPE_TCAM_PRI_ONLY,
    .rm_more_info =     th_a0_udf_rm_more_info,
    .rm_more_info_count = 1,/* implicit length assignment */
};
static const lt_mreq_info_t th_a0_vlan_subnet_tcam_lt_mreq_info = {
    .aggr_ekw_edw = 7,
    .hw_entry_info =     th_a0_vlan_subnet_tcam_hw_entry_info,
    .hw_entry_info_count = 1,/* implicit length assignment */
    .num_edw = 1,
    .num_ekw = 1,
    .pt_type = LT_PT_TYPE_TCAM_PRI_ONLY,
    .rm_more_info =     th_a0_vlan_subnet_tcam_rm_more_info,
    .rm_more_info_count = 1,/* implicit length assignment */
};
static const uint16_t th_a0_fp_compression_dst_data_end_bit_array[1] = {
    324,
};
static const uint16_t th_a0_fp_compression_src_data_end_bit_array[1] = {
    324,
};
static const uint16_t th_a0_l2_my_station_tcam_data_end_bit_array[1] = {
    172,
};
static const uint16_t th_a0_l2_user_entry_data_end_bit_array[1] = {
    198,
};
static const uint16_t th_a0_tnl_ipv4_decap_data_end_bit_array[1] = {
    183,
};
static const uint16_t th_a0_tnl_ipv6_decap_data_end_bit_array[1] = {
    183,
};
static const uint16_t th_a0_udf_flex_hash_data_end_bit_array[1] = {
    41,
};
static const uint16_t th_a0_udf_tcam_data_end_bit_array[1] = {
    189,
};
static const uint16_t th_a0_vlan_subnet_tcam_data_end_bit_array[1] = {
    198,
};

