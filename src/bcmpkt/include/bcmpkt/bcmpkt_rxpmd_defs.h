#ifndef BCMPKT_RXPMD_DEFS_H
#define BCMPKT_RXPMD_DEFS_H
/*******************************************************************************
 *
 * DO NOT EDIT THIS FILE!
 * This file is auto-generated from the registers file.
 * Edits to this file will be lost when it is regenerated.
 *
 * $Id: $
 * Copyright: (c) 2018 Broadcom. All Rights Reserved. "Broadcom" refers to 
 * Broadcom Limited and/or its subsidiaries.
 * 
 * Broadcom Switch Software License
 * 
 * This license governs the use of the accompanying Broadcom software. Your 
 * use of the software indicates your acceptance of the terms and conditions 
 * of this license. If you do not agree to the terms and conditions of this 
 * license, do not use the software.
 * 1. Definitions
 *    "Licensor" means any person or entity that distributes its Work.
 *    "Software" means the original work of authorship made available under 
 *    this license.
 *    "Work" means the Software and any additions to or derivative works of 
 *    the Software that are made available under this license.
 *    The terms "reproduce," "reproduction," "derivative works," and 
 *    "distribution" have the meaning as provided under U.S. copyright law.
 *    Works, including the Software, are "made available" under this license 
 *    by including in or with the Work either (a) a copyright notice 
 *    referencing the applicability of this license to the Work, or (b) a copy 
 *    of this license.
 * 2. Grant of Copyright License
 *    Subject to the terms and conditions of this license, each Licensor 
 *    grants to you a perpetual, worldwide, non-exclusive, and royalty-free 
 *    copyright license to reproduce, prepare derivative works of, publicly 
 *    display, publicly perform, sublicense and distribute its Work and any 
 *    resulting derivative works in any form.
 * 3. Grant of Patent License
 *    Subject to the terms and conditions of this license, each Licensor 
 *    grants to you a perpetual, worldwide, non-exclusive, and royalty-free 
 *    patent license to make, have made, use, offer to sell, sell, import, and 
 *    otherwise transfer its Work, in whole or in part. This patent license 
 *    applies only to the patent claims licensable by Licensor that would be 
 *    infringed by Licensor's Work (or portion thereof) individually and 
 *    excluding any combinations with any other materials or technology.
 *    If you institute patent litigation against any Licensor (including a 
 *    cross-claim or counterclaim in a lawsuit) to enforce any patents that 
 *    you allege are infringed by any Work, then your patent license from such 
 *    Licensor to the Work shall terminate as of the date such litigation is 
 *    filed.
 * 4. Redistribution
 *    You may reproduce or distribute the Work only if (a) you do so under 
 *    this License, (b) you include a complete copy of this License with your 
 *    distribution, and (c) you retain without modification any copyright, 
 *    patent, trademark, or attribution notices that are present in the Work.
 * 5. Derivative Works
 *    You may specify that additional or different terms apply to the use, 
 *    reproduction, and distribution of your derivative works of the Work 
 *    ("Your Terms") only if (a) Your Terms provide that the limitations of 
 *    Section 7 apply to your derivative works, and (b) you identify the 
 *    specific derivative works that are subject to Your Terms. 
 *    Notwithstanding Your Terms, this license (including the redistribution 
 *    requirements in Section 4) will continue to apply to the Work itself.
 * 6. Trademarks
 *    This license does not grant any rights to use any Licensor's or its 
 *    affiliates' names, logos, or trademarks, except as necessary to 
 *    reproduce the notices described in this license.
 * 7. Limitations
 *    Platform. The Work and any derivative works thereof may only be used, or 
 *    intended for use, with a Broadcom switch integrated circuit.
 *    No Reverse Engineering. You will not use the Work to disassemble, 
 *    reverse engineer, decompile, or attempt to ascertain the underlying 
 *    technology of a Broadcom switch integrated circuit.
 * 8. Termination
 *    If you violate any term of this license, then your rights under this 
 *    license (including the license grants of Sections 2 and 3) will 
 *    terminate immediately.
 * 9. Disclaimer of Warranty
 *    THE WORK IS PROVIDED "AS IS" WITHOUT WARRANTIES OR CONDITIONS OF ANY 
 *    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WARRANTIES OR CONDITIONS OF 
 *    MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, TITLE OR 
 *    NON-INFRINGEMENT. YOU BEAR THE RISK OF UNDERTAKING ANY ACTIVITIES UNDER 
 *    THIS LICENSE. SOME STATES' CONSUMER LAWS DO NOT ALLOW EXCLUSION OF AN 
 *    IMPLIED WARRANTY, SO THIS DISCLAIMER MAY NOT APPLY TO YOU.
 * 10. Limitation of Liability
 *    EXCEPT AS PROHIBITED BY APPLICABLE LAW, IN NO EVENT AND UNDER NO LEGAL 
 *    THEORY, WHETHER IN TORT (INCLUDING NEGLIGENCE), CONTRACT, OR OTHERWISE 
 *    SHALL ANY LICENSOR BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY DIRECT, 
 *    INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES ARISING OUT OF 
 *    OR RELATED TO THIS LICENSE, THE USE OR INABILITY TO USE THE WORK 
 *    (INCLUDING BUT NOT LIMITED TO LOSS OF GOODWILL, BUSINESS INTERRUPTION, 
 *    LOST PROFITS OR DATA, COMPUTER FAILURE OR MALFUNCTION, OR ANY OTHER 
 *    COMMERCIAL DAMAGES OR LOSSES), EVEN IF THE LICENSOR HAS BEEN ADVISED OF 
 *    THE POSSIBILITY OF SUCH DAMAGES.
 * 
 * 
 *
 * This file provides field macros for RX Packet Metadata (RXPMD, called EP_TO_CPU in hardware) access.
 */

/*!
 * \name             Packet metadata RX Field IDs.
 * \anchor BCMPKT_RXPMD_XXX
 */
/*! \{ */
/*! Invalid BCMPKT_RXPMD FID indicator */
#define BCMPKT_RXPMD_FID_INVALID                 -1
/*! Cell was stored in Unicast Queue in MMU. */
#define BCMPKT_RXPMD_UNICAST_QUEUE               0
/*! Queue number used in MMU, PBE field */
#define BCMPKT_RXPMD_QUEUE_NUM                   1
/*! OVERLAY ON QUEUE_NUM Queue number used in MMU for cpu port, PBE field */
#define BCMPKT_RXPMD_CPU_COS                     2
/*!
 * Valid only for packets which came in on Higig+ source port. Higig+ module
 * header field, PBE field.
 */
#define BCMPKT_RXPMD_HGI                         3
/*! Matched Rule, PBE field. */
#define BCMPKT_RXPMD_MATCHED_RULE                4
/*! DO NOT CHANGE, USED BY CMIC HW: Packet length after all modification. */
#define BCMPKT_RXPMD_PKT_LENGTH                  5
/*! Source Port Number, PBE field. */
#define BCMPKT_RXPMD_SRC_PORT_NUM                6
/*! Inner VID. */
#define BCMPKT_RXPMD_INNER_VID                   7
/*! Inner CFI */
#define BCMPKT_RXPMD_INNER_CFI                   8
/*! Inner priority. */
#define BCMPKT_RXPMD_INNER_PRI                   9
/*! Outer VID. */
#define BCMPKT_RXPMD_OUTER_VID                   10
/*! Outer Canoncial Format Indicator. */
#define BCMPKT_RXPMD_OUTER_CFI                   11
/*! Outer Priority. */
#define BCMPKT_RXPMD_OUTER_PRI                   12
/*! Special packet. */
#define BCMPKT_RXPMD_SPECIAL_PACKET_INDICATOR    13
/*! Special packet type. */
#define BCMPKT_RXPMD_SPECIAL_PACKET_TYPE         14
/*! Set to 1 if the DSCP value has been changed by the EP */
#define BCMPKT_RXPMD_CHANGE_DSCP                 15
/*! New DSCP value computed by the chip (EP) for the packet */
#define BCMPKT_RXPMD_DSCP                        16
/*! Change the ECN as indicated by the IFP. */
#define BCMPKT_RXPMD_CHANGE_ECN                  17
/*! New ECN value provided by the IFP. */
#define BCMPKT_RXPMD_ECN                         18
/*!
 * NEW This pretty much maps from EP_TO_CPU_HEADER_OVERLAY_TYPE from the MPB
 * 0: Invalid
 * 1: TIMESTAMP field carries the LM packet-count for an OAM loss measurement packet
 * 2: TIMESTAMP_UPPER,TIMESTAMP fields carry the 64-bit DM Time-stamp for an OAM
 * delay measurement packet
 * 3: 802.1AS timestamp in the TIMESTAMP field
 */
#define BCMPKT_RXPMD_TIMESTAMP_TYPE              19
/*! Low 32 bits of timestamp. */
#define BCMPKT_RXPMD_TIMESTAMP                   20
/*! High 32/16bits of timestamp. */
#define BCMPKT_RXPMD_TIMESTAMP_HI                21
/*! Mirror-to-Port Index, PBE field */
#define BCMPKT_RXPMD_MTP_INDEX                   22
/*! BPDU Packet, PBE field */
#define BCMPKT_RXPMD_BPDU                        23
/*! Indicates the packet is generated as a result of packet replication */
#define BCMPKT_RXPMD_REPLICATION                 24
/*! L3 IP Multicast Packet Flag, PBE field */
#define BCMPKT_RXPMD_L3ONLY                      25
/*! Indicates packet was routed - UC OR MC */
#define BCMPKT_RXPMD_IP_ROUTED                   26
/*! Source port is Higig. */
#define BCMPKT_RXPMD_SRC_HIGIG                   27
/*! Source port is Higig2. */
#define BCMPKT_RXPMD_SRC_HIGIG2                  28
/*! Indicates all switch copies were dropped in MMU (for copies to CPU port). */
#define BCMPKT_RXPMD_UC_SW_COPY_DROPPED          29
/*!
 * Flag to indicate this is a switched packet as opposed to a mirrored packet,
 * PBE field
 */
#define BCMPKT_RXPMD_SWITCH                      30
/*! Indicates there is an SD tag in the packet */
#define BCMPKT_RXPMD_SD_TAG_PRESENT              31
/*!
 * Indicates ingress inner VLAN tag action, PBE field:
 * 0: do not modify, 1: add I-VID, 2: replace I-VID, 3: remove I-VID
 */
#define BCMPKT_RXPMD_ING_ITAG_ACTION             32
/*!
 * Indicates ingress outer VLAN tag action, PBE field:
 * 0: do not modify, 1: add O-VID, 2: replace O-VID, 3: reserved
 */
#define BCMPKT_RXPMD_ING_OTAG_ACTION             33
/*!
 * Indicates the incoming tag status, PBE field:
 * 0: untagged, 1: single inner-tag, 2: single outer-tag, 3: double tagged.
 */
#define BCMPKT_RXPMD_INCOMING_TAG_STATUS         34
/*!
 * This field is set by the ingress chip to indicate to the egress chip that 1588
 * 1-step ingress correction update has been applied to this packet. Egress chip
 * uses this bit when egress port CF_UPDATE_MODE is set to ING_UPDATE_BASED_ENABLE.
 * Encodings are:
 * 0: Ingress correction update has NOT been applied to the packet. When configured
 * in coupled mode, egress chip must NOT apply the egress correction update for
 * this packet.
 * 1: Ingress correction update has been applied to the packet. When configured in
 * coupled mode, egress chip must apply the egress correction update.
 */
#define BCMPKT_RXPMD_ONE_STEP_1588_ING_UPDATE_DONE 35
/*! The full 32-bit EH tag */
#define BCMPKT_RXPMD_EH_TAG                      36
/*!
 * Defines the header type enabling flexibility for future applications.
 * 0x0: Queue selections for Sirius/Arad.
 * 0x1: ClassID
 * 0x2: ClassID + QTag
 * 0x3-0x15: Reserved for future use.
 */
#define BCMPKT_RXPMD_EH_TYPE                     37
/*! See EH_SEG_SEL_ENCODING format */
#define BCMPKT_RXPMD_EH_TYPE_0_EH_SEG_SEL        38
/*!
 * EH queue tag assignment
 * 00: No EH queue tag assignment,
 * 01-11: EH queue tag assignment modes
 */
#define BCMPKT_RXPMD_EH_TYPE_0_EH_TAG_TYPE       39
/*! EH queue tag */
#define BCMPKT_RXPMD_EH_TYPE_0_EH_QUEUE_TAG      40
/*! Type of CLASSID */
#define BCMPKT_RXPMD_EH_TYPE_1_CLASSID_TYPE      41
/*! L3_IIF */
#define BCMPKT_RXPMD_EH_TYPE_1_L3_IIF            42
/*! CLASSID */
#define BCMPKT_RXPMD_EH_TYPE_1_CLASSID           43
/*! Type of CLASSID */
#define BCMPKT_RXPMD_EH_TYPE_2_CLASSID_TYPE      44
/*! CLASSID */
#define BCMPKT_RXPMD_EH_TYPE_2_CLASSID           45
/*! L3_IIF */
#define BCMPKT_RXPMD_EH_TYPE_2_EH_QUEUE_TAG      46
/*! Indicates the Session ID for the Rx BFD packet.Valid when OAM_PKT_TYPE=2 */
#define BCMPKT_RXPMD_RX_BFD_START_OFFSET         47
/*! Indicates the Session ID for the Rx BFD packet.Valid when OAM_PKT_TYPE=2 */
#define BCMPKT_RXPMD_RX_BFD_START_OFFSET_TYPE    48
/*! Indicates the Session ID for the Rx BFD packet.Valid when OAM_PKT_TYPE=2 */
#define BCMPKT_RXPMD_RX_BFD_SESSION_INDEX        49
/*! The reason code TYPE. */
#define BCMPKT_RXPMD_REASON_TYPE                 50
/*!
 * This should be the final control in the EP indicating to not change the TTL,
 * from any source.
 */
#define BCMPKT_RXPMD_DO_NOT_CHANGE_TTL           51
/*! Valid for non-BFD packet */
#define BCMPKT_RXPMD_I2E_CLASSID_TYPE            52
/*! Valid for non-BFD packet */
#define BCMPKT_RXPMD_I2E_CLASSID                 53
/*! Ingress L3 Intf number. */
#define BCMPKT_RXPMD_ING_L3_INTF                 54
/*! Indication to next pass about the type of loopback. */
#define BCMPKT_RXPMD_LOOPBACK_PACKET_TYPE        55
/*! If set, then packet has been modified by the EP and CRC needs to be regenerated */
#define BCMPKT_RXPMD_REGEN_CRC                   56
/*! Entropy label. */
#define BCMPKT_RXPMD_ENTROPY_LABEL               57
/*! Used to indicate if and how a tunnel has been decapsulated from the packet. */
#define BCMPKT_RXPMD_TUNNEL_DECAP_TYPE           58
/*! DLB_ID valid. */
#define BCMPKT_RXPMD_DLB_ID_VALID                59
/*! DLB_ID. */
#define BCMPKT_RXPMD_DLB_ID                      60
/*! HG2 Extended Header Valid. (was in FRC_reserved) */
#define BCMPKT_RXPMD_HG2_EXT_HDR_VALID           61
/*!
 * New field for VNTAG/ETAGs: 00: Do not Modify
 * 01: Add/Replace incoming VNTAG/ETAG with Ingress Port Based VNTAG
 * 10: Add/Replace incoming VNTAG/ETAG with Ingress Port Based ETAG.
 * 11: Delete Packets VNTAG/ETAG
 */
#define BCMPKT_RXPMD_VNTAG_ACTION                62
/*! If set, the DVP/NHOP_INDEX overlay has the DVP. Else, it has the Next Hop Index. */
#define BCMPKT_RXPMD_DVP_NHI_SEL                 63
/*! Validates VFI field */
#define BCMPKT_RXPMD_VFI_VALID                   64
/*!
 * This field's msb is the replication type from the EGR_IPMC table.
 * is a flag that determines the contents of the lower 15-bits.
 * => Lower 16-bits contain the IPMC_INTF_NUM from the MMU
 * => Lower 16-bits contain the NEXT_HOP_INDEX from the Ingress Pipeline
 */
#define BCMPKT_RXPMD_REPLICATION_OR_NHOP_INDEX   65
/*! Higig Lookup packet Indication. */
#define BCMPKT_RXPMD_HIGIG_LOOKUP_PKT            66
/*! VRF. */
#define BCMPKT_RXPMD_VRF                         67
/*! NEXT_HOP_INDEX from Underlay */
#define BCMPKT_RXPMD_NEXT_HOP_INDEX_B            68
/*! NEXT_HOP_INDEX from Overlay */
#define BCMPKT_RXPMD_NEXT_HOP_INDEX_A            69
/*! Indicates type info for NEXT_HOP_INDEX_A and _B fields */
#define BCMPKT_RXPMD_NEXT_HOP_INDEX_TYPE         70
/*! Packet forwarding type, it is MPB_BASE_FORWARD_FORMAT::FORWARDING_TYPE */
#define BCMPKT_RXPMD_FORWARDING_TYPE             71
/*! Indicate a BFD terminated packet. */
#define BCMPKT_RXPMD_BFD_SESSION_INDEX_VALID     72
/*! Low 32 bits of the packet MATCH_ID. */
#define BCMPKT_RXPMD_MATCH_ID_LO                 73
/*! High 18 bits of the packet MATCH_ID. */
#define BCMPKT_RXPMD_MATCH_ID_HI                 74
/*! L3_IIF. */
#define BCMPKT_RXPMD_L3_IIF                      75
/*! RXPMD FIELD ID NUMBER */
#define BCMPKT_RXPMD_FID_COUNT                   76
/*! \} */

/*! RXPMD field name strings for debugging. */
#define BCMPKT_RXPMD_FIELD_NAME_MAP_INIT \
    {"UNICAST_QUEUE", BCMPKT_RXPMD_UNICAST_QUEUE},\
    {"QUEUE_NUM", BCMPKT_RXPMD_QUEUE_NUM},\
    {"CPU_COS", BCMPKT_RXPMD_CPU_COS},\
    {"HGI", BCMPKT_RXPMD_HGI},\
    {"MATCHED_RULE", BCMPKT_RXPMD_MATCHED_RULE},\
    {"PKT_LENGTH", BCMPKT_RXPMD_PKT_LENGTH},\
    {"SRC_PORT_NUM", BCMPKT_RXPMD_SRC_PORT_NUM},\
    {"INNER_VID", BCMPKT_RXPMD_INNER_VID},\
    {"INNER_CFI", BCMPKT_RXPMD_INNER_CFI},\
    {"INNER_PRI", BCMPKT_RXPMD_INNER_PRI},\
    {"OUTER_VID", BCMPKT_RXPMD_OUTER_VID},\
    {"OUTER_CFI", BCMPKT_RXPMD_OUTER_CFI},\
    {"OUTER_PRI", BCMPKT_RXPMD_OUTER_PRI},\
    {"SPECIAL_PACKET_INDICATOR", BCMPKT_RXPMD_SPECIAL_PACKET_INDICATOR},\
    {"SPECIAL_PACKET_TYPE", BCMPKT_RXPMD_SPECIAL_PACKET_TYPE},\
    {"CHANGE_DSCP", BCMPKT_RXPMD_CHANGE_DSCP},\
    {"DSCP", BCMPKT_RXPMD_DSCP},\
    {"CHANGE_ECN", BCMPKT_RXPMD_CHANGE_ECN},\
    {"ECN", BCMPKT_RXPMD_ECN},\
    {"TIMESTAMP_TYPE", BCMPKT_RXPMD_TIMESTAMP_TYPE},\
    {"TIMESTAMP", BCMPKT_RXPMD_TIMESTAMP},\
    {"TIMESTAMP_HI", BCMPKT_RXPMD_TIMESTAMP_HI},\
    {"MTP_INDEX", BCMPKT_RXPMD_MTP_INDEX},\
    {"BPDU", BCMPKT_RXPMD_BPDU},\
    {"REPLICATION", BCMPKT_RXPMD_REPLICATION},\
    {"L3ONLY", BCMPKT_RXPMD_L3ONLY},\
    {"IP_ROUTED", BCMPKT_RXPMD_IP_ROUTED},\
    {"SRC_HIGIG", BCMPKT_RXPMD_SRC_HIGIG},\
    {"SRC_HIGIG2", BCMPKT_RXPMD_SRC_HIGIG2},\
    {"UC_SW_COPY_DROPPED", BCMPKT_RXPMD_UC_SW_COPY_DROPPED},\
    {"SWITCH", BCMPKT_RXPMD_SWITCH},\
    {"SD_TAG_PRESENT", BCMPKT_RXPMD_SD_TAG_PRESENT},\
    {"ING_ITAG_ACTION", BCMPKT_RXPMD_ING_ITAG_ACTION},\
    {"ING_OTAG_ACTION", BCMPKT_RXPMD_ING_OTAG_ACTION},\
    {"INCOMING_TAG_STATUS", BCMPKT_RXPMD_INCOMING_TAG_STATUS},\
    {"ONE_STEP_1588_ING_UPDATE_DONE", BCMPKT_RXPMD_ONE_STEP_1588_ING_UPDATE_DONE},\
    {"EH_TAG", BCMPKT_RXPMD_EH_TAG},\
    {"EH_TYPE", BCMPKT_RXPMD_EH_TYPE},\
    {"EH_TYPE_0::EH_SEG_SEL", BCMPKT_RXPMD_EH_TYPE_0_EH_SEG_SEL},\
    {"EH_TYPE_0::EH_TAG_TYPE", BCMPKT_RXPMD_EH_TYPE_0_EH_TAG_TYPE},\
    {"EH_TYPE_0::EH_QUEUE_TAG", BCMPKT_RXPMD_EH_TYPE_0_EH_QUEUE_TAG},\
    {"EH_TYPE_1::CLASSID_TYPE", BCMPKT_RXPMD_EH_TYPE_1_CLASSID_TYPE},\
    {"EH_TYPE_1::L3_IIF", BCMPKT_RXPMD_EH_TYPE_1_L3_IIF},\
    {"EH_TYPE_1::CLASSID", BCMPKT_RXPMD_EH_TYPE_1_CLASSID},\
    {"EH_TYPE_2::CLASSID_TYPE", BCMPKT_RXPMD_EH_TYPE_2_CLASSID_TYPE},\
    {"EH_TYPE_2::CLASSID", BCMPKT_RXPMD_EH_TYPE_2_CLASSID},\
    {"EH_TYPE_2::EH_QUEUE_TAG", BCMPKT_RXPMD_EH_TYPE_2_EH_QUEUE_TAG},\
    {"RX_BFD_START_OFFSET", BCMPKT_RXPMD_RX_BFD_START_OFFSET},\
    {"RX_BFD_START_OFFSET_TYPE", BCMPKT_RXPMD_RX_BFD_START_OFFSET_TYPE},\
    {"RX_BFD_SESSION_INDEX", BCMPKT_RXPMD_RX_BFD_SESSION_INDEX},\
    {"REASON_TYPE", BCMPKT_RXPMD_REASON_TYPE},\
    {"DO_NOT_CHANGE_TTL", BCMPKT_RXPMD_DO_NOT_CHANGE_TTL},\
    {"I2E_CLASSID_TYPE", BCMPKT_RXPMD_I2E_CLASSID_TYPE},\
    {"I2E_CLASSID", BCMPKT_RXPMD_I2E_CLASSID},\
    {"ING_L3_INTF", BCMPKT_RXPMD_ING_L3_INTF},\
    {"LOOPBACK_PACKET_TYPE", BCMPKT_RXPMD_LOOPBACK_PACKET_TYPE},\
    {"REGEN_CRC", BCMPKT_RXPMD_REGEN_CRC},\
    {"ENTROPY_LABEL", BCMPKT_RXPMD_ENTROPY_LABEL},\
    {"TUNNEL_DECAP_TYPE", BCMPKT_RXPMD_TUNNEL_DECAP_TYPE},\
    {"DLB_ID_VALID", BCMPKT_RXPMD_DLB_ID_VALID},\
    {"DLB_ID", BCMPKT_RXPMD_DLB_ID},\
    {"HG2_EXT_HDR_VALID", BCMPKT_RXPMD_HG2_EXT_HDR_VALID},\
    {"VNTAG_ACTION", BCMPKT_RXPMD_VNTAG_ACTION},\
    {"DVP_NHI_SEL", BCMPKT_RXPMD_DVP_NHI_SEL},\
    {"VFI_VALID", BCMPKT_RXPMD_VFI_VALID},\
    {"REPLICATION_OR_NHOP_INDEX", BCMPKT_RXPMD_REPLICATION_OR_NHOP_INDEX},\
    {"HIGIG_LOOKUP_PKT", BCMPKT_RXPMD_HIGIG_LOOKUP_PKT},\
    {"VRF", BCMPKT_RXPMD_VRF},\
    {"NEXT_HOP_INDEX_B", BCMPKT_RXPMD_NEXT_HOP_INDEX_B},\
    {"NEXT_HOP_INDEX_A", BCMPKT_RXPMD_NEXT_HOP_INDEX_A},\
    {"NEXT_HOP_INDEX_TYPE", BCMPKT_RXPMD_NEXT_HOP_INDEX_TYPE},\
    {"FORWARDING_TYPE", BCMPKT_RXPMD_FORWARDING_TYPE},\
    {"BFD_SESSION_INDEX_VALID", BCMPKT_RXPMD_BFD_SESSION_INDEX_VALID},\
    {"MATCH_ID_LO", BCMPKT_RXPMD_MATCH_ID_LO},\
    {"MATCH_ID_HI", BCMPKT_RXPMD_MATCH_ID_HI},\
    {"L3_IIF", BCMPKT_RXPMD_L3_IIF},\
    {"fid count", BCMPKT_RXPMD_FID_COUNT}

/*!
 * \name Packet metadata RX Internal Usage Field IDs.
 * \anchor BCMPKT_RXPMD_I_XXX
 */
/*! \{ */
/*! RXPMD raw data size. */
#define BCMPKT_RXPMD_SIZE                        0
/*! Contains RX reasons. Refer to bcmpkt_rxpmd_reasons_get to decode reasons. */
#define BCMPKT_RXPMD_REASON                      1
/*! Module Header information. Refer to Higig macros to encode/decode this erea. */
#define BCMPKT_RXPMD_MODULE_HDR                  2
/*! RXPMD INTERNAL FIELD ID NUMBER */
#define BCMPKT_RXPMD_I_FID_COUNT                 3
/*! \} */

/*! RXPMD internal field name strings for debugging. Internally use only. */
#define BCMPKT_RXPMD_IFIELD_NAME_MAP_INIT \
    {"SIZE", BCMPKT_RXPMD_SIZE},\
    {"REASON", BCMPKT_RXPMD_REASON},\
    {"MODULE_HDR", BCMPKT_RXPMD_MODULE_HDR},\
    {"fid count", BCMPKT_RXPMD_I_FID_COUNT}

/*!
 * \name Packet RX Reason Types.
 * \anchor BCMPKT_RX_REASON_XXX
 */
/*! \{ */
/*! No reason */
#define BCMPKT_RX_REASON_NONE                    0
/*! IPMC interface mismatch */
#define BCMPKT_RX_REASON_CPU_IPMC_INTERFACE_MISMATCH 1
/*! Get: Indicate NAT REASON happened; Set: Configure NAT REASON mask. */
#define BCMPKT_RX_REASON_NAT                     2
/*! TCP/UDP packet NAT lookup miss. */
#define BCMPKT_RX_REASON_NAT_TCP_UDP_MISS        3
/*! ICMP packet NAT lookup miss. */
#define BCMPKT_RX_REASON_NAT_ICMP_MISS           4
/*! NAT lookup on fragmented packet. */
#define BCMPKT_RX_REASON_NAT_FRAGMENT            5
/*! Non TCP/UDP/ICMP packet NAT lookup miss. */
#define BCMPKT_RX_REASON_NAT_OTHER_MISS          6
/*! FCOE zone check fail */
#define BCMPKT_RX_REASON_FCOE_ZONE_CHECK_FAIL    10
/*! VXLAN VNID miss */
#define BCMPKT_RX_REASON_VXLAN_VN_ID_MISS        11
/*! VXLAN SIP miss */
#define BCMPKT_RX_REASON_VXLAN_SIP_MISS          12
/*! QCN_CNM_PRP_DLF */
#define BCMPKT_RX_REASON_QCN_CNM_PRP_DLF         13
/*! QCN_CNM_PRP */
#define BCMPKT_RX_REASON_QCN_CNM_PRP             14
/*! MPLS_ALERT_LABEL */
#define BCMPKT_RX_REASON_MPLS_ALERT_LABEL        15
/*! MPLS_ILLEGAL_RESERVED_LABEL */
#define BCMPKT_RX_REASON_MPLS_ILLEGAL_RESERVED_LABEL 16
/*! ICNM */
#define BCMPKT_RX_REASON_ICNM                    17
/*! Copy to CPU for visibility packet */
#define BCMPKT_RX_REASON_PACKET_TRACE_TO_CPU     18
/*! BFD Error */
#define BCMPKT_RX_REASON_BFD_ERROR               19
/*! BFD Slowpath to CPU */
#define BCMPKT_RX_REASON_BFD_SLOWPATH            20
/*! L2GRE_VPNID_MISS */
#define BCMPKT_RX_REASON_L2GRE_VPNID_MISS        21
/*! L2GRE_SIP_MISS */
#define BCMPKT_RX_REASON_L2GRE_SIP_MISS          22
/*! Get: Indicate TRILL REASON happened; Set: Configure TRILL REASON mask. */
#define BCMPKT_RX_REASON_TRILL                   23
/*! Trill Header Error */
#define BCMPKT_RX_REASON_TRILL_HDR_ERROR         24
/*! Trill Lookup Miss */
#define BCMPKT_RX_REASON_TRILL_LOOKUP_MISS       25
/*! Trill RPF Check Fail */
#define BCMPKT_RX_REASON_TRILL_RPF_CHECK_FAIL    26
/*! Trill Slow Path */
#define BCMPKT_RX_REASON_TRILL_SLOWPATH          27
/*! Trill Core IS-IS */
#define BCMPKT_RX_REASON_TRILL_CORE_IS_IS_PKT    28
/*! Trill Hop Count Check Failure */
#define BCMPKT_RX_REASON_TRILL_HOP_COUNT_CHECK_FAIL 29
/*! Rbridge nickname lookup copy to cpu */
#define BCMPKT_RX_REASON_TRILL_NICKNAME_TABLE    30
/*! Tunnel decap ECN error */
#define BCMPKT_RX_REASON_TUNNEL_DECAP_ECN_ERROR  31
/*! OAM packets copied to the CPU for slowpath processing */
#define BCMPKT_RX_REASON_OAM_SLOWPATH            32
/*!
 * Indicates packet was copied to CPU due to a network time sync packet.  This is
 * set either by dedicated IEEE 802.1AS controls or the FP.
 */
#define BCMPKT_RX_REASON_TIME_SYNC               33
/*! Indicates packet was copied to the CPU due to VLAN Translation miss. */
#define BCMPKT_RX_REASON_VXLT_MISS               34
/*! Get: Indicate NIV REASON happened; Set: Configure NIV REASON mask. */
#define BCMPKT_RX_REASON_NIV                     35
/*! Dot1p Admittance Discard */
#define BCMPKT_RX_REASON_NIV_DOT1P_DROP          36
/*! VIF Lookup Miss */
#define BCMPKT_RX_REASON_NIV_VIF_MISS            37
/*! RPF Lookup Miss */
#define BCMPKT_RX_REASON_NIV_RPF_MISS            38
/*! VNTAG Format Error */
#define BCMPKT_RX_REASON_NIV_VNTAG_ERROR         39
/*! VNTAG Present Drop */
#define BCMPKT_RX_REASON_NIV_VNTAG_PRESENT       40
/*! VNTAG Not Present Drop */
#define BCMPKT_RX_REASON_NIV_VNTAG_NOT_PRESENT   41
/*! Copy to CPU for MY_STATION match reason */
#define BCMPKT_RX_REASON_MY_STATION              43
/*! MPLS unknown ACH */
#define BCMPKT_RX_REASON_MPLS_UNKNOWN_ACH_ERROR  44
/*! ING_L3_NEXT_HOP table copy to CPU */
#define BCMPKT_RX_REASON_L3_NEXT_HOP             45
/*! Provider Backbone Transport pkt is not unicast */
#define BCMPKT_RX_REASON_PBT_NONUC_PKT           46
/*! Bit32 - MPLS sequence number check fail */
#define BCMPKT_RX_REASON_MPLS_SEQ_NUM_FAIL       47
/*! Bit31 - MPLS TTL check fail */
#define BCMPKT_RX_REASON_MPLS_TTL_CHECK_FAIL     48
/*! Bit30 - MPLS invalid payload */
#define BCMPKT_RX_REASON_MPLS_INVALID_PAYLOAD    49
/*! Bit29 - MPLS invalid label action */
#define BCMPKT_RX_REASON_MPLS_INVALID_ACTION     50
/*! Bit28 - MPLS label lookup miss */
#define BCMPKT_RX_REASON_MPLS_LABEL_MISS         51
/*! Copy to CPU for MAC to IP bind check failures */
#define BCMPKT_RX_REASON_MAC_BIND_FAIL           52
/*! Bit26 - CBSM_PREVENTED - copy to CPU */
#define BCMPKT_RX_REASON_CBSM_PREVENTED          53
/*! Bit25 - VFP Action - copy to CPU */
#define BCMPKT_RX_REASON_CPU_VFP                 54
/*! Bit24 - Multicast index error */
#define BCMPKT_RX_REASON_MCIDX_ERROR             55
/*! Bit23 - HiGig Header error */
#define BCMPKT_RX_REASON_HGHDR_ERROR             56
/*! Bit22 - L3 MTU check fail to CPU */
#define BCMPKT_RX_REASON_L3_MTU_CHECK_FAIL       57
/*! Bit21 - Parity error on IP tables */
#define BCMPKT_RX_REASON_PARITY_ERROR            58
/*! Bit20 - L3 slow path CPU processed packets */
#define BCMPKT_RX_REASON_L3_SLOWPATH             59
/*! Bit19 - ICMP Redirect copy to CPU */
#define BCMPKT_RX_REASON_ICMP_REDIRECT           60
/*! Bit18 - Flex Sflow */
#define BCMPKT_RX_REASON_CPU_SFLOW_FLEX          61
/*! Bit17 - Tunnel error trap to CPU */
#define BCMPKT_RX_REASON_CPU_TUNNEL_ERR          62
/*! Bit16 - Martian address trap to CPU */
#define BCMPKT_RX_REASON_CPU_MARTIAN_ADDR        63
/*! Bit15 - DOS attack trap to CPU */
#define BCMPKT_RX_REASON_CPU_DOS_ATTACK          64
/*! Bit14 - Protocol Packet */
#define BCMPKT_RX_REASON_CPU_PROTOCOL_PKT        65
/*! Bit13 - L3 header  - IP options, TTL=0, !IPv4 etc. */
#define BCMPKT_RX_REASON_CPU_L3HDR_ERR           66
/*! Bit12 - FFP Action - copy to CPU */
#define BCMPKT_RX_REASON_CPU_FFP                 67
/*! Bit11 - IPMC miss - {SIP, DIP} miss or DIP miss */
#define BCMPKT_RX_REASON_CPU_IPMC_MISS           68
/*! Bit10 - MC miss */
#define BCMPKT_RX_REASON_CPU_MC_MISS             69
/*! Bit9 - Station Movement - L3 */
#define BCMPKT_RX_REASON_CPU_L3SRC_MOVE          70
/*! Bit8 - L3 DIP Miss */
#define BCMPKT_RX_REASON_CPU_L3DST_MISS          71
/*! Bit7 - L3 SIP Miss */
#define BCMPKT_RX_REASON_CPU_L3SRC_MISS          72
/*! Bit6 - sFlow - Dst */
#define BCMPKT_RX_REASON_CPU_SFLOW_DST           73
/*! Bit5 - sFlow - Src */
#define BCMPKT_RX_REASON_CPU_SFLOW_SRC           74
/*! Bit4 - L2_TABLE - copy to CPU */
#define BCMPKT_RX_REASON_CPU_L2CPU               75
/*! Bit3- Station Movement - L2 */
#define BCMPKT_RX_REASON_CPU_L2MOVE              76
/*! Bit2 - DLF, */
#define BCMPKT_RX_REASON_CPU_DLF                 77
/*! Bit1 - SLF */
#define BCMPKT_RX_REASON_CPU_SLF                 78
/*! Bit0- CPU Learn bit is set in PTABLE and SA is learnt; unknown VLAN; VID = 0xfff */
#define BCMPKT_RX_REASON_CPU_UVLAN               79
/*! Bit18 - protection data dropped packet copied to CPU */
#define BCMPKT_RX_REASON_PROTECTION_DATA_DROP    80
/*! OAM packets copied to the CPU for error cases */
#define BCMPKT_RX_REASON_OAM_ERROR               81
/*! Copy to CPU for OAM LMDM */
#define BCMPKT_RX_REASON_OAM_LMDM                82
/*! Get: Indicate SFLOW REASON happened; Set: Configure SFLOW REASON mask. */
#define BCMPKT_RX_REASON_CPU_SFLOW               83
/*! FP based Sflow */
#define BCMPKT_RX_REASON_CPU_SFLOW_CPU_SFLOW_FLEX 84
/*! Egress port-based Sflow */
#define BCMPKT_RX_REASON_CPU_SFLOW_CPU_SFLOW_DST 85
/*! Ingress port-based Sflow */
#define BCMPKT_RX_REASON_CPU_SFLOW_CPU_SFLOW_SRC 86
/*! Get: Indicate SFLOW REASON happened; Set: Configure SFLOW REASON mask. */
#define BCMPKT_RX_REASON_MPLS_PROC_ERROR         87
/*! Invalid payload. */
#define BCMPKT_RX_REASON_MPLS_PROC_ERROR_INVALID_PAYLOAD 88
/*! Invalid action. */
#define BCMPKT_RX_REASON_MPLS_PROC_ERROR_INVALID_ACTION 89
/*! Lookup label miss. */
#define BCMPKT_RX_REASON_MPLS_PROC_ERROR_LABEL_MISS 90
/*! TTL check fail. */
#define BCMPKT_RX_REASON_MPLS_PROC_ERROR_TTL_CHECK_FAIL 91
/*! TBD. */
#define BCMPKT_RX_REASON_MPLS_UNKNOWN_CONTROL_PKT 95
/*! Copied to CPU by ETRAP monitor. */
#define BCMPKT_RX_REASON_ETRAP_MONITOR           96
/*! Copied to CPU by Inband Telemetry turnaround. */
#define BCMPKT_RX_REASON_INT_TURN_AROUND         97
/*! Copied to CPU by DLB monitor. */
#define BCMPKT_RX_REASON_DLB_MONITOR             98
/*! Bit13 - L3 header  - IP options, TTL=0, !IPv4 etc. */
#define BCMPKT_RX_REASON_CPU_L3_HDR_MISMATCH     99
/*! Bit31 - tunnel with object validation check fail */
#define BCMPKT_RX_REASON_TUNNEL_OBJECT_VALIDATION_FAIL 100
/*! L3 copy to CPU. */
#define BCMPKT_RX_REASON_CPU_L3CPU               101
/*! VNTAG unknown SUBTENDING port */
#define BCMPKT_RX_REASON_VNTAG_UNKNOWN_SUBTENDING_PORT_ERROR 102
/*! RPF Lookup Miss */
#define BCMPKT_RX_REASON_RPF_MISS                103
/*! Dot1p Admittance Discard */
#define BCMPKT_RX_REASON_DOT1P_ADMITTANCE_DISCARD 104
/*! It should be renamed to TUNNEL_ADAPT_LOOKUP_CPU. Indicates packet was copied to the CPU due to TUNNEL_ADAPT_LOOKUP's miss policy or hit policy copy to cpu. */
#define BCMPKT_RX_REASON_TUNNEL_ADAPT_LOOKUP_MISS_DROP 105
/*! PKT_FLOW_SELECT_MISS_TO_CPU */
#define BCMPKT_RX_REASON_PKT_FLOW_SELECT_MISS    106
/*! Indicates packet was copied to the CPU due to PKT_FLOW_SELECT policy. */
#define BCMPKT_RX_REASON_PKT_FLOW_SELECT         107
/*! It should be renamed to TUNNEL_ADAPT_LOOKUP_MISS_TO_CPU_FROM_LOGICAL_TABLE_SEL. Indicates packet was copied to the CPU due to FORWARDING_LOOKUP miss. */
#define BCMPKT_RX_REASON_CPU_FORWARDING_OTHER    108
/*!  */
#define BCMPKT_RX_REASON_INVALID_TPID            109
/*!  */
#define BCMPKT_RX_REASON_MPLS_CONTROL_PKT        110
/*! TUNNEL_ERR_TO_CPU */
#define BCMPKT_RX_REASON_TUNNEL_ERR              111
/*! TUNNEL_TTL_ERR_TO_CPU  Error */
#define BCMPKT_RX_REASON_TUNNEL_TTL_ERR          112
/*!  */
#define BCMPKT_RX_REASON_L3_HDR_ERROR            113
/*!  */
#define BCMPKT_RX_REASON_L2_HDR_ERROR            114
/*!  */
#define BCMPKT_RX_REASON_TTL1_ERR                115
/*!  */
#define BCMPKT_RX_REASON_TTL_ERR                 116
/*! Nat error packet. */
#define BCMPKT_RX_REASON_NAT_ERROR               117
/*! BCMPKT_RX_REASON TYPE NUMBER */
#define BCMPKT_RX_REASON_COUNT                   118
/*! \} */

/*! RXPMD reason name strings for debugging. */
#define BCMPKT_REASON_NAME_MAP_INIT \
    {"NONE", BCMPKT_RX_REASON_NONE},\
    {"CPU_IPMC_INTERFACE_MISMATCH", BCMPKT_RX_REASON_CPU_IPMC_INTERFACE_MISMATCH},\
    {"NAT", BCMPKT_RX_REASON_NAT},\
    {"NAT_TCP_UDP_MISS", BCMPKT_RX_REASON_NAT_TCP_UDP_MISS},\
    {"NAT_ICMP_MISS", BCMPKT_RX_REASON_NAT_ICMP_MISS},\
    {"NAT_FRAGMENT", BCMPKT_RX_REASON_NAT_FRAGMENT},\
    {"NAT_OTHER_MISS", BCMPKT_RX_REASON_NAT_OTHER_MISS},\
    {"RESERVED_REASON", 7},\
    {"RESERVED_REASON", 8},\
    {"RESERVED_REASON", 9},\
    {"FCOE_ZONE_CHECK_FAIL", BCMPKT_RX_REASON_FCOE_ZONE_CHECK_FAIL},\
    {"VXLAN_VN_ID_MISS", BCMPKT_RX_REASON_VXLAN_VN_ID_MISS},\
    {"VXLAN_SIP_MISS", BCMPKT_RX_REASON_VXLAN_SIP_MISS},\
    {"QCN_CNM_PRP_DLF", BCMPKT_RX_REASON_QCN_CNM_PRP_DLF},\
    {"QCN_CNM_PRP", BCMPKT_RX_REASON_QCN_CNM_PRP},\
    {"MPLS_ALERT_LABEL", BCMPKT_RX_REASON_MPLS_ALERT_LABEL},\
    {"MPLS_ILLEGAL_RESERVED_LABEL", BCMPKT_RX_REASON_MPLS_ILLEGAL_RESERVED_LABEL},\
    {"ICNM", BCMPKT_RX_REASON_ICNM},\
    {"PACKET_TRACE_TO_CPU", BCMPKT_RX_REASON_PACKET_TRACE_TO_CPU},\
    {"BFD_ERROR", BCMPKT_RX_REASON_BFD_ERROR},\
    {"BFD_SLOWPATH", BCMPKT_RX_REASON_BFD_SLOWPATH},\
    {"L2GRE_VPNID_MISS", BCMPKT_RX_REASON_L2GRE_VPNID_MISS},\
    {"L2GRE_SIP_MISS", BCMPKT_RX_REASON_L2GRE_SIP_MISS},\
    {"TRILL", BCMPKT_RX_REASON_TRILL},\
    {"TRILL_HDR_ERROR", BCMPKT_RX_REASON_TRILL_HDR_ERROR},\
    {"TRILL_LOOKUP_MISS", BCMPKT_RX_REASON_TRILL_LOOKUP_MISS},\
    {"TRILL_RPF_CHECK_FAIL", BCMPKT_RX_REASON_TRILL_RPF_CHECK_FAIL},\
    {"TRILL_SLOWPATH", BCMPKT_RX_REASON_TRILL_SLOWPATH},\
    {"TRILL_CORE_IS_IS_PKT", BCMPKT_RX_REASON_TRILL_CORE_IS_IS_PKT},\
    {"TRILL_HOP_COUNT_CHECK_FAIL", BCMPKT_RX_REASON_TRILL_HOP_COUNT_CHECK_FAIL},\
    {"TRILL_NICKNAME_TABLE", BCMPKT_RX_REASON_TRILL_NICKNAME_TABLE},\
    {"TUNNEL_DECAP_ECN_ERROR", BCMPKT_RX_REASON_TUNNEL_DECAP_ECN_ERROR},\
    {"OAM_SLOWPATH", BCMPKT_RX_REASON_OAM_SLOWPATH},\
    {"TIME_SYNC", BCMPKT_RX_REASON_TIME_SYNC},\
    {"VXLT_MISS", BCMPKT_RX_REASON_VXLT_MISS},\
    {"NIV", BCMPKT_RX_REASON_NIV},\
    {"NIV_DOT1P_DROP", BCMPKT_RX_REASON_NIV_DOT1P_DROP},\
    {"NIV_VIF_MISS", BCMPKT_RX_REASON_NIV_VIF_MISS},\
    {"NIV_RPF_MISS", BCMPKT_RX_REASON_NIV_RPF_MISS},\
    {"NIV_VNTAG_ERROR", BCMPKT_RX_REASON_NIV_VNTAG_ERROR},\
    {"NIV_VNTAG_PRESENT", BCMPKT_RX_REASON_NIV_VNTAG_PRESENT},\
    {"NIV_VNTAG_NOT_PRESENT", BCMPKT_RX_REASON_NIV_VNTAG_NOT_PRESENT},\
    {"RESERVED_REASON", 42},\
    {"MY_STATION", BCMPKT_RX_REASON_MY_STATION},\
    {"MPLS_UNKNOWN_ACH_ERROR", BCMPKT_RX_REASON_MPLS_UNKNOWN_ACH_ERROR},\
    {"L3_NEXT_HOP", BCMPKT_RX_REASON_L3_NEXT_HOP},\
    {"PBT_NONUC_PKT", BCMPKT_RX_REASON_PBT_NONUC_PKT},\
    {"MPLS_SEQ_NUM_FAIL", BCMPKT_RX_REASON_MPLS_SEQ_NUM_FAIL},\
    {"MPLS_TTL_CHECK_FAIL", BCMPKT_RX_REASON_MPLS_TTL_CHECK_FAIL},\
    {"MPLS_INVALID_PAYLOAD", BCMPKT_RX_REASON_MPLS_INVALID_PAYLOAD},\
    {"MPLS_INVALID_ACTION", BCMPKT_RX_REASON_MPLS_INVALID_ACTION},\
    {"MPLS_LABEL_MISS", BCMPKT_RX_REASON_MPLS_LABEL_MISS},\
    {"MAC_BIND_FAIL", BCMPKT_RX_REASON_MAC_BIND_FAIL},\
    {"CBSM_PREVENTED", BCMPKT_RX_REASON_CBSM_PREVENTED},\
    {"CPU_VFP", BCMPKT_RX_REASON_CPU_VFP},\
    {"MCIDX_ERROR", BCMPKT_RX_REASON_MCIDX_ERROR},\
    {"HGHDR_ERROR", BCMPKT_RX_REASON_HGHDR_ERROR},\
    {"L3_MTU_CHECK_FAIL", BCMPKT_RX_REASON_L3_MTU_CHECK_FAIL},\
    {"PARITY_ERROR", BCMPKT_RX_REASON_PARITY_ERROR},\
    {"L3_SLOWPATH", BCMPKT_RX_REASON_L3_SLOWPATH},\
    {"ICMP_REDIRECT", BCMPKT_RX_REASON_ICMP_REDIRECT},\
    {"CPU_SFLOW_FLEX", BCMPKT_RX_REASON_CPU_SFLOW_FLEX},\
    {"CPU_TUNNEL_ERR", BCMPKT_RX_REASON_CPU_TUNNEL_ERR},\
    {"CPU_MARTIAN_ADDR", BCMPKT_RX_REASON_CPU_MARTIAN_ADDR},\
    {"CPU_DOS_ATTACK", BCMPKT_RX_REASON_CPU_DOS_ATTACK},\
    {"CPU_PROTOCOL_PKT", BCMPKT_RX_REASON_CPU_PROTOCOL_PKT},\
    {"CPU_L3HDR_ERR", BCMPKT_RX_REASON_CPU_L3HDR_ERR},\
    {"CPU_FFP", BCMPKT_RX_REASON_CPU_FFP},\
    {"CPU_IPMC_MISS", BCMPKT_RX_REASON_CPU_IPMC_MISS},\
    {"CPU_MC_MISS", BCMPKT_RX_REASON_CPU_MC_MISS},\
    {"CPU_L3SRC_MOVE", BCMPKT_RX_REASON_CPU_L3SRC_MOVE},\
    {"CPU_L3DST_MISS", BCMPKT_RX_REASON_CPU_L3DST_MISS},\
    {"CPU_L3SRC_MISS", BCMPKT_RX_REASON_CPU_L3SRC_MISS},\
    {"CPU_SFLOW_DST", BCMPKT_RX_REASON_CPU_SFLOW_DST},\
    {"CPU_SFLOW_SRC", BCMPKT_RX_REASON_CPU_SFLOW_SRC},\
    {"CPU_L2CPU", BCMPKT_RX_REASON_CPU_L2CPU},\
    {"CPU_L2MOVE", BCMPKT_RX_REASON_CPU_L2MOVE},\
    {"CPU_DLF", BCMPKT_RX_REASON_CPU_DLF},\
    {"CPU_SLF", BCMPKT_RX_REASON_CPU_SLF},\
    {"CPU_UVLAN", BCMPKT_RX_REASON_CPU_UVLAN},\
    {"PROTECTION_DATA_DROP", BCMPKT_RX_REASON_PROTECTION_DATA_DROP},\
    {"OAM_ERROR", BCMPKT_RX_REASON_OAM_ERROR},\
    {"OAM_LMDM", BCMPKT_RX_REASON_OAM_LMDM},\
    {"CPU_SFLOW", BCMPKT_RX_REASON_CPU_SFLOW},\
    {"CPU_SFLOW_CPU_SFLOW_FLEX", BCMPKT_RX_REASON_CPU_SFLOW_CPU_SFLOW_FLEX},\
    {"CPU_SFLOW_CPU_SFLOW_DST", BCMPKT_RX_REASON_CPU_SFLOW_CPU_SFLOW_DST},\
    {"CPU_SFLOW_CPU_SFLOW_SRC", BCMPKT_RX_REASON_CPU_SFLOW_CPU_SFLOW_SRC},\
    {"MPLS_PROC_ERROR", BCMPKT_RX_REASON_MPLS_PROC_ERROR},\
    {"MPLS_PROC_ERROR_INVALID_PAYLOAD", BCMPKT_RX_REASON_MPLS_PROC_ERROR_INVALID_PAYLOAD},\
    {"MPLS_PROC_ERROR_INVALID_ACTION", BCMPKT_RX_REASON_MPLS_PROC_ERROR_INVALID_ACTION},\
    {"MPLS_PROC_ERROR_LABEL_MISS", BCMPKT_RX_REASON_MPLS_PROC_ERROR_LABEL_MISS},\
    {"MPLS_PROC_ERROR_TTL_CHECK_FAIL", BCMPKT_RX_REASON_MPLS_PROC_ERROR_TTL_CHECK_FAIL},\
    {"RESERVED_REASON", 92},\
    {"RESERVED_REASON", 93},\
    {"RESERVED_REASON", 94},\
    {"MPLS_UNKNOWN_CONTROL_PKT", BCMPKT_RX_REASON_MPLS_UNKNOWN_CONTROL_PKT},\
    {"ETRAP_MONITOR", BCMPKT_RX_REASON_ETRAP_MONITOR},\
    {"INT_TURN_AROUND", BCMPKT_RX_REASON_INT_TURN_AROUND},\
    {"DLB_MONITOR", BCMPKT_RX_REASON_DLB_MONITOR},\
    {"CPU_L3_HDR_MISMATCH", BCMPKT_RX_REASON_CPU_L3_HDR_MISMATCH},\
    {"TUNNEL_OBJECT_VALIDATION_FAIL", BCMPKT_RX_REASON_TUNNEL_OBJECT_VALIDATION_FAIL},\
    {"CPU_L3CPU", BCMPKT_RX_REASON_CPU_L3CPU},\
    {"VNTAG_UNKNOWN_SUBTENDING_PORT_ERROR", BCMPKT_RX_REASON_VNTAG_UNKNOWN_SUBTENDING_PORT_ERROR},\
    {"RPF_MISS", BCMPKT_RX_REASON_RPF_MISS},\
    {"DOT1P_ADMITTANCE_DISCARD", BCMPKT_RX_REASON_DOT1P_ADMITTANCE_DISCARD},\
    {"TUNNEL_ADAPT_LOOKUP_MISS_DROP", BCMPKT_RX_REASON_TUNNEL_ADAPT_LOOKUP_MISS_DROP},\
    {"PKT_FLOW_SELECT_MISS", BCMPKT_RX_REASON_PKT_FLOW_SELECT_MISS},\
    {"PKT_FLOW_SELECT", BCMPKT_RX_REASON_PKT_FLOW_SELECT},\
    {"CPU_FORWARDING_OTHER", BCMPKT_RX_REASON_CPU_FORWARDING_OTHER},\
    {"INVALID_TPID", BCMPKT_RX_REASON_INVALID_TPID},\
    {"MPLS_CONTROL_PKT", BCMPKT_RX_REASON_MPLS_CONTROL_PKT},\
    {"TUNNEL_ERR", BCMPKT_RX_REASON_TUNNEL_ERR},\
    {"TUNNEL_TTL_ERR", BCMPKT_RX_REASON_TUNNEL_TTL_ERR},\
    {"L3_HDR_ERROR", BCMPKT_RX_REASON_L3_HDR_ERROR},\
    {"L2_HDR_ERROR", BCMPKT_RX_REASON_L2_HDR_ERROR},\
    {"TTL1_ERR", BCMPKT_RX_REASON_TTL1_ERR},\
    {"TTL_ERR", BCMPKT_RX_REASON_TTL_ERR},\
    {"NAT_ERROR", BCMPKT_RX_REASON_NAT_ERROR},\
    {"reason count", BCMPKT_RX_REASON_COUNT}

#endif /*! BCMPKT_RXPMD_DEFS_H */
